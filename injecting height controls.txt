## injecting height controls

	<div class="bM_stgs_class_info bM_stgs_content_box bM_item_height">
              <label title="css style unique identifier">image item height:</label>
              <div class="word_box width_pct">
                <input type="number" class="bM_stgs_bg_opacity_nbr bM_stgs_bg_option" ng-model="take1.tool.details.image.item_height"
                min="0" max="25" step=".5" ng-model-options="{ updateOn: 'blur' }" ng-if="take1.tool.details.image.font_measure == 'px'" />
                <input type="number" class="bM_stgs_bg_opacity_nbr bM_stgs_bg_option" ng-model="take1.tool.details.image.item_height"
                min="0" max="10" step=".1" ng-model-options="{ updateOn: 'blur' }" ng-if="take1.tool.details.image.font_measure != 'px'" />
                <label class=""> {{take1.tool.details.image.font_measure}}</label>

                <div class="font_measure_btns measure_btns bM_stgs_button_info">
                		<button type="button" class="bM_stgs_resp w3-btn first" ng-click="take1.tool.details.image.font_measure = 'px'; take1.font_item_style('image')"
                		ng-class="{active:take1.tool.details.image.font_measure == 'px'}"  title="" >px</button>
                		<button type="button" class="bM_stgs_resp w3-btn" ng-click="take1.tool.details.image.font_measure = 'rem'; take1.font_item_style('image')"
                		ng-class="{active:take1.tool.details.image.font_measure == 'rem'}">rem</button>
                		<button type="button" class="bM_stgs_resp w3-btn" ng-click="take1.tool.details.image.font_measure = 'em'; take1.font_item_style('image')"
                		ng-class="{active:take1.tool.details.image.font_measure == 'em'}">em</button>
                		<button type="button" class="bM_stgs_resp w3-btn" ng-click="take1.tool.details.image.font_measure = '%'; take1.font_item_style('image')"
                		ng-class="{active:take1.tool.details.image.font_measure == '%'}">%</button>
                		<button type="button" class="bM_stgs_resp w3-btn" ng-click="take1.tool.details.image.font_measure = 'vmax'; take1.font_item_style('image')"
                		ng-class="{active:take1.tool.details.image.font_measure == 'vmax'}">vmx</button>
                		<button type="button" class="bM_stgs_resp w3-btn last" ng-click="take1.tool.details.image.font_measure = 'vmin'; take1.font_item_style('image')"
                		ng-class="{active:take1.tool.details.image.font_measure == 'vmin'}"  title="" >vmin</button>
                	</div>

              </div><!-- end item height -->
              <div class="range_box">
                <input type="range" class="bM_stgs_bg_opacity_rng bM_stgs_bg_option" data-dest="image" ng-model="take1.tool.details.image.item_height"
                min="0" max="25" step=".5"  value="{{take1.tool.details.image.item_height}}" ng-if="take1.tool.details.image.font_measure == 'px'" />
                <input type="range" class="bM_stgs_bg_opacity_rng bM_stgs_bg_option" data-dest="image" ng-model="take1.tool.details.image.item_height"
                min="0" max="10" step=".1"  value="{{take1.tool.details.image.item_height}}" ng-if="take1.tool.details.image.font_measure != 'px'" />
              </div>
            </div><!--ends bM_item_height-->
            <div class="bM_stgs_mobility_info bM_stgs_content_box">
              <div class="bM_switch_cont switch_cont">
                <label class="bM_switch_label stgs_access">content control? </label>
                <label class="bM_switch switch">
                  <input class="switch_input stgs_access access" type="checkbox"
                  ng-model="take1.tool.details.image.ellipsis">
                  <span class="fs_slider"></span>
                </label>
              </div>
            </div>
            <div class="bM_stgs_class_info bM_stgs_content_box bM_line_height" ng-show="take1.tool.details.image.ellipsis == true">
              <label title="css style unique identifier">number of lines?</label>
              <div class="word_box width_pct">
                <input type="number" class="bM_stgs_bg_opacity_nbr bM_stgs_bg_option" ng-model="take1.tool.details.image.line_number"
                min="1" max="10" step="1" ng-model-options="{ updateOn: 'blur' }" />
                <label class=""> {{take1.tool.details.image.line_number}}</label>
              </div>
              <div class="range_box">
                <input type="range" class="bM_stgs_bg_opacity_rng bM_stgs_bg_option" data-dest="image" ng-model="take1.tool.details.image.line_number"
                min="1" max="10" step="1"  value="{{take1.tool.details.image.line_number}}" />
              </div>
            </div><!--ends bM_line_number-->
			
```

update getTextStyle

```
		this.getTextStyle = function(data,src)
		{

		  if(data.font == 'NaN')
		  {
			//console.log("data.font = ",data.font + src);
		  }
		  let prep_font = (data.font != undefined && data.font != "") ? data.font : "Arial, Helvetica, sans-serif";
		  //console.log("prep_font = ",prep_font);
		  //console.log("prep_font is a ",typeof prep_font);
		  let single_font = (prep_font.indexOf(",") != -1 || prep_font.split(",").length < 2) ? true : false;
		  prep_font = (single_font == true) ? `font-family:${prep_font},Arial, sans-serif;` :`font-family:${prep_font};`;

		  let has_font = (src == "image" || src == "link-outer") ? "no" : "yes";
		  let font = (has_font != "no") ? prep_font : "";
		  let height = "";
		  let outer_calc = "";
		  let font_size = (has_font != "no" && data.font_size != undefined && data.font_size != "") ? `font-size:${data.font_size}${data.font_measure};` : "";
		  let font_color = (has_font != "no" && data.font_color != undefined && data.font_color != "") ? `color:${data.font_color};` : "";

		  //sets up text ellipsis
		  //let line_height = (data.line_height != undefined && data.line_height != "") ? `line-height:${data.line_height}${data.font_measure};` : "";
		  let line_height = (has_font != "no" && data.line_height != undefined && data.line_height != "") ? `line-height:${data.line_height}${data.font_measure};` : "";
			let fSz = (has_font != "no" && data.font_size != undefined && data.font_size != "") ? data.font_size : "none";
			let iHt = (data.item_height != undefined && data.item_height != "") ? data.item_height : "none";
			let lNbr = (data.line_number != undefined && data.line_number != "") ? data.line_number : "none";
			let fMeas = (data.font_measure != undefined && data.font_measure != "") ? data.font_measure : "none";

			let h_Calc = (iHt !== "none" && lNbr !== "none"  && fMeas !== "none") ? iHt * lNbr : "none";
			//let proper_src = (src == "body" || src == "title") ? true : false;
			let proper_src = true;
			//control read more height
			let has_link = (src == "link-outer" && data.active_link != undefined && data.active_link == true && h_Calc !== "none") ? true : false;

			height = (proper_src === true && data.ellipsis === true && h_Calc !== "none") ? `height:${h_Calc}${data.font_measure};` : "";
			 if(src == "link-outer")
			 {
			   outer_calc = (data.outer_calc != undefined && data.outer_calc != "") ? data.outer_calc : 0;
			   height = (has_link == true) ? `height:${(h_Calc + outer_calc).toFixed(2)}${data.font_measure};` : "";
			 }//if

			let line_number = (data.ellipsis != undefined && data.ellipsis === true && data.line_number != undefined
			  && data.line_number != "") ? `-webkit-line-clamp: ${data.line_number};` : "";

			  //if its link-outer just give a height
			let txt_style = (has_font == "no") ? height : font + font_size + font_color + line_height + line_number + height;

			if(src == "image"){
			  //console.log("src == image");
			}
			return txt_style;

		}//getTextStyle
```

key code 

```

	let has_font = (src == "image" || src == "link-outer") ? "no" : "yes";
	  
	  
```

and add this to the html
{{take1.getTextStyle(take1.tool.details.image,'image')}}

```
        <div class="blogMod_img_cont {{take1.getClass('image')}} canvas_wrapper"
        style="{{take1.tool.details.image.style}} {{take1.getTextStyle(take1.tool.details.image,'image')}}"
        ng-show="take1.tool.details.image.active_image === true" >
		
		...
```