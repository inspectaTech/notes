(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1090:function(module,exports,__webpack_require__){"use strict";__webpack_require__(6),__webpack_require__(53),__webpack_require__(42),__webpack_require__(33),__webpack_require__(40),__webpack_require__(1091),__webpack_require__(1092),__webpack_require__(7),__webpack_require__(43);var _clientApi=__webpack_require__(57),_clientLogger=__webpack_require__(36),_configFilename=__webpack_require__(1093);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(_configFilename.args||_configFilename.argTypes)&&_clientLogger.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify({args:_configFilename.args,argTypes:_configFilename.argTypes})),_configFilename.decorators&&_configFilename.decorators.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator,!1)})),_configFilename.loaders&&_configFilename.loaders.forEach((function(loader){return(0,_clientApi.addLoader)(loader,!1)})),(_configFilename.parameters||_configFilename.globals||_configFilename.globalTypes)&&(0,_clientApi.addParameters)(_objectSpread(_objectSpread({},_configFilename.parameters),{},{globals:_configFilename.globals,globalTypes:_configFilename.globalTypes}),!1),_configFilename.argTypesEnhancers&&_configFilename.argTypesEnhancers.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}))},1093:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"parameters",(function(){return parameters})),__webpack_require__.d(__webpack_exports__,"decorators",(function(){return decorators}));var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(210),_stories_components_Center__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(480),_stories_components_Center__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_stories_components_Center__WEBPACK_IMPORTED_MODULE_1__),parameters={actions:{argTypesRegex:"^on[A-Z].*"},options:{storySort:function storySort(a,b){return a[1].kind===b[1].kind?0:a[1].id.localeCompare(b[1].id,void 0,{numeric:!0})}}},decorators=[function(story){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_stories_components_Center__WEBPACK_IMPORTED_MODULE_1___default.a,{children:story()})}]},1095:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(210);__webpack_require__(1096);__webpack_require__(1100);var Center=function Center(props){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"center storybook-center",children:props.children})};Center.displayName="Center",Center.__docgenInfo={description:"",methods:[],displayName:"Center"},__webpack_exports__.default=Center,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories\\components\\Center\\Center.js"]={name:"Center",docgenInfo:Center.__docgenInfo,path:"stories\\components\\Center\\Center.js"})},1096:function(module,exports,__webpack_require__){var api=__webpack_require__(1097),content=__webpack_require__(1098);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},1098:function(module,exports,__webpack_require__){(exports=__webpack_require__(1099)(!1)).push([module.i,".center{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n",""]),module.exports=exports},1100:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(481),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(318),options={insert:"head",singleton:!1};_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_1__.a,options);__webpack_exports__.default=_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_1__.a.locals||{}},1101:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(360).configure)([__webpack_require__(1102),__webpack_require__(1105)],module,!1)}).call(this,__webpack_require__(108)(module))},1102:function(module,exports,__webpack_require__){var map={"./notes/boilerplate/build-workflows/build-workflows.stories.mdx":1110,"./notes/boilerplate/build-workflows/react-cdn-scratch.stories.mdx":1111,"./notes/boilerplate/build-workflows/react-cdn-storybook.stories.mdx":1112,"./notes/nodejs/express/express-notes.stories.mdx":1113,"./notes/nodejs/express/express-svr-walk.stories.mdx":1114,"./notes/nodejs/packages/packages-basic-main.stories.mdx":1115,"./notes/nodejs/packages/packages-cli.stories.mdx":1116,"./notes/nodejs/packages/packages-create-project.stories.mdx":1117,"./notes/nodejs/packages/packages-full-main.stories.mdx":1118,"./notes/nodejs/packages/packages-notes.stories.mdx":1119,"./notes/nodejs/packages/packages-pkg-json.stories.mdx":1120,"./notes/nodejs/passport/passport-notes.stories.mdx":1121,"./notes/react/react-hook-form-notes.stories.mdx":1122,"./notes/storybook/sb-com-mdx-template.stories.mdx":1123,"./notes/storybook/sb-csf-mdx.stories.mdx":1124,"./notes/storybook/sb-mdx-template.stories.mdx":1125,"./notes/storybook/sb-notes.stories.mdx":1126,"./notes/storybook/sb-publish.stories.mdx":1127,"./notes/storybook/sb-setup.stories.mdx":1128};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1102},1105:function(module,exports){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,module.exports=webpackEmptyContext,webpackEmptyContext.id=1105},1110:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"boilerplate/build_workflows/build workflows",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},'# build workflow\r\n\r\n## development server research notes\r\n\r\n#### npm vs npx\r\n\r\n#### create-react-app\r\n\r\n[react scripts](https://www.npmjs.com/package/react-scripts)   \r\n\r\n>This package includes scripts and configuration used buy create react app\r\n\r\n[create react app getting started](https://facebook.github.io/create-react-app/docs/getting-started)   \r\n[What exactly is the \'react-scripts start\' command?](https://stackoverflow.com/questions/50722133/what-exactly-is-the-react-scripts-start-command)   \r\n\r\n>create-react-app and react-scripts\r\n\r\n>react-scripts is a set of scripts from the create-react-app starter pack. create-react-app helps you kick off projects without configuring, so you do not have to setup your project by yourself.\r\n\r\n>react-scripts start sets up the development environment and starts a server, as well as hot module reloading. >You can read here to see what everything it does for you.\r\n\r\n**npm start run the create-react-app server**\r\n\r\n```\r\n  cd navTo/dir\r\n  npm start\r\n```\r\n\r\n#### nodemon\r\n\r\n>i created an alias that runs nodemon and calls the server   \r\n\r\n```\r\n$ alias src=\'nodemon src/index.js\'\r\n\r\n$ src\r\n```\r\n\r\n\r\n#### webpack-dev-server   \r\n\r\n[What are the benefits of webpack and hot-reload on node server vs babel, npm, and nodemon](https://hashnode.com/post/what-are-the-benefits-of-webpack-and-hot-reload-on-node-server-vs-babel-npm-and-nodemon-cj9woomkm00g1jswt62i2wme1)   \r\n\r\n>Generally, your front-end should be managed by webpack which will use babel and npm. Webpack will provide hot-reload, which means your browser will load in new code while developing (not in production). Nodemon should still be used in dev to "hot-reload" your backend code.\r\n\r\n\r\n#### [Add react to a website](https://reactjs.org/docs/add-react-to-a-website.html)   \r\n\r\n> this version works as long as you aren\'t using import to add your react files\r\n> in the example the author uses one .js file to do everything (all loaded with a script tag)   \r\n\r\n> see react cdn from scratch to load a real react component from cdn with babel and imports\r\n\r\nDevelopment scripts\r\n\r\n```\r\n  <script src="https://unpkg.com/react@16/umd/react.development.js" crossorigin><\/script>\r\n  <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js" crossorigin><\/script>\r\n```\r\n\r\nProduction scripts\r\n\r\n```\r\n  <script src="https://unpkg.com/react@16/umd/react.production.min.js" crossorigin><\/script>\r\n  <script src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js" crossorigin><\/script>\r\n```\r\n**adding JSX**\r\n\r\nThe quickest way to try JSX in your project is to add this <script> tag to your page:\r\n\r\n```\r\n  <script src="https://unpkg.com/babel-standalone@6/babel.min.js"><\/script>\r\n```\r\n\r\nNow you can use JSX in any <script> tag by adding type="text/babel" attribute to it. Here is an example HTML file with JSX that you can download and play with.\r\n\r\n**i added this script to the body instead of the js nested in the script tag.**\r\n\r\n```\r\n\t<script type="text/babel" src="index.js"><\/script>\r\n```\r\n\r\n#### run the webpage without creating a server   \r\n\r\n[http-server: a command-line http server (npm docs)](https://www.npmjs.com/package/http-server)   \r\n[http-party/http-server (github home)](https://github.com/http-party/http-server#readme)   \r\n\r\n```\r\n  npx http-server -o index.html\r\n\r\n```\r\n\r\n> -o is open in the browser\r\n\r\nchange the port with -p\r\n\r\n```\r\n npx http-server -o -p 3000\r\n```\r\n\r\nmy server example\r\n\r\n```\r\n  npx http-server -o \\index.html\r\n```\r\n'))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"boilerplate/build_workflows/build workflows",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1111:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"boilerplate/build_workflows/react cdn from scratch",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},'# react cdn from scratch   \r\n\r\n## create a react app entirely from cdns with babel and import feature   \r\n\r\nfrom version-control/react/react_cdn_scratch/README.md\r\n\r\nstart server with:\r\n\r\n```\r\n  npx http-server -o index.html\r\n```\r\n\r\n>this doesn\'t always actually open the browser   \r\n>i still had to manually goto the browser address http://127.0.0.1:8080/\r\n\r\n### 2 methods:   \r\n\r\n- cdns only (index.html) **works**\r\n- local files (index.html2) **works**\r\n\r\n#### for the standalone with cdns only:   \r\n\r\n#### GOTCHA: [babel-standalone not transpilling esm module](https://github.com/babel/babel/issues/9976)   \r\n\r\n**error: Uncaught ReferenceError: require is not defined**\r\n\r\n[example es modules with bable (glitch.com)](https://glitch.com/edit/#!/example-es-modules-with-babel?path=index.html%3A1%3A0)   \r\n\r\nthe glitch.com working example\r\n\r\n```\r\n  <!DOCTYPE html>\r\n<html lang="en">\r\n  <head>\r\n    <title>example-es-modules-with-babel</title>\r\n    <meta charset="utf-8">\r\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\r\n    <meta name="viewport" content="width=device-width, initial-scale=1">\r\n\r\n    \x3c!-- import the webpage\'s stylesheet --\x3e\r\n    <link rel="stylesheet" href="/style.css">\r\n\r\n\r\n    <script src="https://unpkg.com/@babel/standalone@7.4.4/babel.js"><\/script>    \r\n    <script src="https://unpkg.com/react@16/umd/react.development.js" crossorigin><\/script>\r\n    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js" crossorigin><\/script>  \r\n    <script>\r\n      Babel.registerPreset("my-preset", {\r\n        presets: [\r\n          [Babel.availablePresets["es2017"], { modules: false }],\r\n          [Babel.availablePresets["react"]]\r\n\r\n        ],\r\n        plugins: [\r\n          [Babel.availablePlugins["transform-modules-umd"]]\r\n        ]        \r\n      });\r\n    <\/script>\r\n    <script type="text/babel" src="./app.js" data-presets="my-preset"><\/script>\r\n    \x3c!-- <script type="text/babel" src="./App.js" data-presets="my-preset"><\/script> --\x3e\r\n    <script type="text/babel" src="./index.js" data-presets="my-preset"><\/script>\r\n\r\n  </head>  \r\n  <body>\r\n    <p>Output should appear below.</p>\r\n    <hr/>\r\n    <div id="root"></div>\r\n  </body>\r\n</html>\r\n```\r\n\r\nemphasis on this babel config script tag   \r\n\r\n```\r\n  <script>\r\n    Babel.registerPreset("my-preset", {\r\n      presets: [\r\n        [Babel.availablePresets["es2017"], { modules: false }],\r\n        [Babel.availablePresets["react"]]\r\n\r\n      ],\r\n      plugins: [\r\n        [Babel.availablePlugins["transform-modules-umd"]]\r\n      ]        \r\n    });\r\n  <\/script>\r\n```\r\n\r\n\r\n#### GOTCHA: dont forget: data-presets="my-preset"   \r\n\r\n```\r\n  <script type="text/babel" src="App.js" data-presets="my-preset"><\/script>\r\n  <script type="text/babel" src="index.js" data-presets="my-preset"><\/script>\r\n```\r\n\r\n>also for this method to work App.js has to also be added to the script tag (its possible all scripts are going to have to be added the long way - there really isn\'t a bundler so maybe thats why import alone isn\'t working.  however i think import works using local files instead of the cdn files)\r\n'))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"boilerplate/build_workflows/react cdn from scratch",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1112:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"boilerplate/build_workflows/react cdn storybook",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},'# react cdn storybook\r\n\r\nsee version-control/react/react_cdn_sb/README.md\r\n\r\n## THE VERDICT:\r\n\r\n- **STORYBOOK CANNOT RUN ON CDN ALONE!** (or with using local files) - needs react in the package.json\r\n\r\n**GOTCHA:** ERR! Error: Cannot find module \'react/package.json\'\r\n\r\n> i probably can configure sb\'s webpack to use external vendor files from cdn (for another day)\r\n\r\n- initial size: 2.97KB   \r\n- size with npm init: 3.26KB   \r\n- size with sb: 136MB (all of the bulk is added to node_modules folder)   \r\n\r\n#### start server with:   \r\n\r\n```\r\n  npx http-server -o index.html\r\n```\r\n\r\n#### for it to work you have to add this   \r\n\r\n```\r\n  <script crossorigin src="https://unpkg.com/react@16/umd/react.production.min.js"><\/script>\r\n  <script crossorigin src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"><\/script>\r\n  <script crossorigin src="https://unpkg.com/@babel/standalone/babel.min.js"><\/script>\r\n  <script>\r\n    Babel.registerPreset("my-preset", {\r\n      presets: [\r\n        [Babel.availablePresets["es2017"], { modules: false }],\r\n        [Babel.availablePresets["react"]]\r\n\r\n      ],\r\n      plugins: [\r\n        [Babel.availablePlugins["transform-modules-umd"]]\r\n      ]        \r\n    });\r\n  <\/script>\r\n  <script type="text/babel" src="./app.js" data-presets="my-preset"><\/script>\r\n  <script type="text/babel" src="./index.js" data-presets="my-preset"><\/script>\r\n```\r\n'))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"boilerplate/build_workflows/react cdn storybook",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1113:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"nodejs/express/express notes",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},"# express   \r\n\r\n[express docs](http://expressjs.com/en/4x/api.html)   \r\n\r\n> warning bodyParser is now the old way (deprecated)    \r\n\r\n[Handle GET and POST Request in Express 4](https://codeforgeek.com/handle-get-post-request-express-4/)   \r\n\r\n[How should I organize multiple Express servers on the same system?](https://stackoverflow.com/questions/9332865/how-should-i-organize-multiple-express-servers-on-the-same-system)    \r\n\r\n#### POST Request:   \r\n\r\n>Express version 4 and above requires extra middle-ware layer to handle POST request. This middle-ware is called as ‘bodyParser’.   \r\n\r\n```\r\n  $ sudo npm install --save body-parser\r\n  $ sudo npm install body-parser\r\n```\r\n\r\n[as of 5.0.0 --save option no longer needed](https://stackoverflow.com/questions/19578796/what-is-the-save-option-for-npm-install)   \r\n\r\n[express.json vs bodyParser.json](https://stackoverflow.com/questions/47232187/express-json-vs-bodyparser-json)   \r\n\r\n> Earlier versions of Express used to have a lot of middleware bundled with it. bodyParser was one of the middlewares that came it. When Express 4.0 was released they decided to remove the bundled middleware from Express and make them separate packages instead. The syntax then changed from app.use(express.json()) to app.use(bodyParser.json()) after installing the bodyParser module.   \r\n\r\n> bodyParser was added back to Express in release 4.16.0, because people wanted it bundled with Express like before. That means you don't have to use bodyParser.json() anymore if you are on the latest release. You can use express.json() instead.    \r\n\r\n#### [setup a simple express server](https://expressjs.com/en/starter/hello-world.html)   \r\n\r\n```\r\n  const express = require('express')\r\n  const app = express()\r\n  const port = 3000\r\n\r\n  app.get('/', (req, res) => res.send('Hello World!'))\r\n\r\n  app.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))\r\n```\r\n\r\n#### [send html files](https://scotch.io/tutorials/use-expressjs-to-deliver-html-files)   \r\n\r\n```\r\n  var express = require('express');\r\n  var app = express();\r\n  var path = require('path');\r\n\r\n  // viewed at http://localhost:8080\r\n  app.get('/', function(req, res) {\r\n      res.sendFile(path.join(__dirname + '/index.html'));\r\n  });\r\n\r\n  app.listen(8080);\r\n```\r\n\r\n[Retrieve the POST request parameters using Express](https://flaviocopes.com/express-post-query-variables/)   \r\n\r\n_server src/app.js_\r\n\r\n```\r\n  // app.use(express.static(publicDirectoryPath));// formerly\r\n\r\n  // app.use('/nodereq',nR_Proxy);\r\n\r\n  app.post('/nodereq/handle',function(req,res){\r\n    console.log(req.body);\r\n    // const query1=request.body.var1;\r\n    // const query2=request.body.var2;\r\n    return res.send({message:\"handle received\"})\r\n  });\r\n```\r\n\r\n_js/app.js_\r\n\r\n```\r\n    let uploadData = {title:\"post test\",var1:\"foo\",var2:\"bar\"};\r\n\r\n    let options = {\r\n      method:'POST',\r\n      body:JSON.stringify(uploadData),\r\n      headers: new Headers({'Content-Type': 'application/json'})\r\n    }// options\r\n\r\n    fetch(`https://example.com/nodereq/handle`,options)\r\n    .then((response)=>{\r\n      response.json()\r\n      .then((data) => {\r\n        if(data.error){\r\n          console.log(data.error);\r\n        }else{\r\n          console.log(data);\r\n        }\r\n      })\r\n    })//.then\r\n```\r\n\r\n> fetch body needs to be stringified or server body-parser error occurs\r\n\r\n> when i use axios i don't have to stringify the data - maybe its done for me?   \r\n\r\n```\r\n  let uploadData = {};\r\n\r\n  const ctrl_Url = `${location.origin}/api/details/items/getItem`;\r\n\r\n  uploadData.item_id = iId;\r\n\r\n  const response = await axios.post(ctrl_Url, uploadData);\r\n```\r\n\r\n#### [CORS](https://www.npmjs.com/package/cors)   \r\n\r\n[express js cors](https://expressjs.com/en/resources/middleware/cors.html)   \r\n\r\n[Allow multiple CORS domain in express js](https://stackoverflow.com/questions/26988071/allow-multiple-cors-domain-in-express-js)   \r\n\r\n[Using CORS in Express](https://medium.com/@alexishevia/using-cors-in-express-cac7e29b005b)   \r\n\r\n#### test1   \r\n\r\n```\r\n  var express = require('express')\r\n  var cors = require('cors')\r\n  var app = express()\r\n\r\n  var whitelist = ['http://example1.com', 'http://example2.com']\r\n  var corsOptions = {\r\n    origin: function (origin, callback) {\r\n      if (whitelist.indexOf(origin) !== -1) {\r\n        callback(null, true)\r\n      } else {\r\n        callback(new Error('Not allowed by CORS'))\r\n      }\r\n    }\r\n  }\r\n\r\n  app.get('/products/:id', cors(corsOptions), function (req, res, next) {\r\n    res.json({msg: 'This is CORS-enabled for a whitelisted domain.'})\r\n  })\r\n```   \r\n**failed**\r\n\r\n#### test2   \r\n\r\nworking example\r\n\r\n```\r\n\r\n  var corsOptions = {\r\n    origin: 'https://example.com',\r\n    optionsSuccessStatus: 200 // some legacy browsers (IE11, various SmartTVs) choke on 204\r\n  }\r\n```\r\n\r\n**this once works**\r\n\r\n#### **GOTCHA:** i have to catch undefined origins    \r\n\r\n> which come up when the page is first loaded from the address bar (not a request)   \r\n\r\n```\r\n  var whitelist = [\r\n    'https://example.com',\r\n    'https://www.example.com'\r\n  ];\r\n\r\n  var corsOptions = {\r\n    origin: function (origin, callback) {\r\n      console.log(origin);//sometimes its undefined\r\n      if(!origin) return callback(null, true);\r\n\r\n      if (whitelist.indexOf(origin) !== -1) {\r\n        callback(null, true)\r\n      } else {\r\n        callback('Not allowed by CORS')\r\n      }//else\r\n    }//anon fn\r\n  }//corsOptions\r\n```\r\n>this line was needed to catch undefined origins\r\n\r\n```\r\n  if(!origin) return callback(null, true);\r\n```\r\n\r\n#### GOTCHA: im having a problem with post request   \r\n\r\n>Access to fetch at 'https://example.com/req/post' from origin 'https://www.example.com' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.\r\n\r\n\r\n[Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.](https://github.com/expressjs/cors/issues/159)   \r\n\r\n#### add cors without cors package   \r\n\r\n[How to add CORS functionality to your NodeJS web app](https://www.codementor.io/nodejsappdeveloper/how-to-add-cors-functionality-to-your-nodejs-web-app-ed4eu7ltf)   \r\n\r\n```\r\n  app.use(function(req, res, next) {\r\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n    next();\r\n  });\r\n```\r\n\r\n>note:\r\n\r\n```\r\n  res.setHeader(\"Access-Control-Allow-Origin\",`https://example.com, https://www.example.com`);\r\n```\r\n\r\n>doesn't work b/c you cant have multiple entries so i needed to narrow the field\r\n\r\n>note: using app.use and a dynamic why to check req.host against a whitelist did work but it set it one time for all subsequent requests (somehow failed when requests didn't match original)\r\n\r\n\r\n#### This does the trick   \r\n\r\n[CORS express not working predictably](https://stackoverflow.com/questions/34644622/cors-express-not-working-predictably)   \r\n\r\n[Get hostname of current request in node.js Express](https://stackoverflow.com/questions/7507015/get-hostname-of-current-request-in-node-js-express)   \r\n\r\n```\r\n  app.options('/req/post', cors(corsOptions),function(req,res){\r\n    //if it gets through run this script\r\n    res.setHeader(\"Access-Control-Allow-Origin\",`https://${req.host}`);\r\n    // res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n    res.end();\r\n  });\r\n\r\n  app.post('/req/post', cors(corsOptions),function(req,res){\r\n    // constroller - distribute by task\r\n    console.log(req.body);\r\n    let obj = req.body;\r\n    ...\r\n```\r\n**set the option b4 each post request**\r\n\r\n## setting up a testing environment   \r\n\r\n> i want to be able to create quick apps to test features and practice workflows\r\n\r\n#### set up another express server on a different port   \r\n\r\n> use nginx server block to direct traffic to that block using the url path\r\n\r\n_sites-enabled/example.com_\r\n\r\n```\r\n  location /req {\r\n  add_header X-app2-message \"nodereq section entered\" always;\r\n  proxy_pass http://localhost:3000;\r\n  proxy_http_version 1.1;\r\n  proxy_set_header Upgrade $http_upgrade;\r\n  proxy_set_header Connection 'upgrade';\r\n  proxy_set_header Host $host;\r\n  proxy_cache_bypass $http_upgrade;\r\n}\r\n\r\n```\r\nvirtual host server block\r\n\r\n> replace /req with /desired-path\r\n> replace localhost:3000 with localhost:desired-port#\r\n\r\ncopy\r\n\r\n#### according to this article i can chain routers   \r\n\r\n[Keeping API Routing Clean Using Express Routers](https://scotch.io/tutorials/keeping-api-routing-clean-using-express-routers)   \r\n\r\n#### [getting chalk colors to show up in bash](https://stackoverflow.com/questions/32742865/no-console-colors-if-using-npm-script-inside-a-git-bash-mintty)   \r\n\r\n_.bash_profile_\r\n\r\n```\r\n  FORCE_COLOR=true\r\n```\r\n**adding this to .bash_profile works**\r\n\r\nget url from req\r\n\r\n[how to get the full url in express](https://stackoverflow.com/questions/10183291/how-to-get-the-full-url-in-express)   \r\n\r\n```\r\n  console.log(chalk.cyan(\"[vID req] protocol\"),req.protocol);// http\r\n  console.log(chalk.cyan(\"[vID req] originalUrl\"),req.originalUrl);// /appName/path/path\r\n  console.log(chalk.cyan(\"[vID req] url\"),req.url);// path without the appName\r\n\r\n  var fullUrl = req.protocol + '://' + req.get('host') + req.originalUrl;// the whole thing\r\n  console.log(chalk.cyan(\"[vID req] fullUrl\"),fullUrl);\r\n```\r\n\r\nsharing render functions (dynamically render view)   \r\n\r\n```\r\n  console.log(chalk.cyan(\"[vID req] protocol\"),req.protocol);\r\n  console.log(chalk.cyan(\"[vID req] originalUrl\"),req.originalUrl);//pathname\r\n  console.log(chalk.cyan(\"[vID req] url\"),req.url);\r\n\r\n  var fullUrl = req.protocol + '://' + req.get('host') + req.originalUrl;\r\n  console.log(chalk.cyan(\"[vID req] fullUrl\"),fullUrl);\r\n\r\n  let toolname = await get_tool_name(req.originalUrl);\r\n  console.log(chalk.cyan(\"[vID req] toolname\"),toolname);\r\n```\r\n\r\n#### **GOTCHA: view hbs filename now must match router path**\r\n\r\n>my app.use(\"detail\") didn't match my render(toolName) where toolName = 'detail' and the filename was details.hbs   \r\n\r\n#### GOTCHA: .env file failed detection   \r\n```\r\n  cd src\r\n  nodemon index.js\r\n```\r\n> the issue occurs when i cd into the servers src folder and then run the server.js file\r\n.env is detected from the root. when i cd into the src folder the src folder becomes the root not its parent folder where i placed the .env file\r\n\r\n#### [using a redirect](http://expressjs.com/en/api.html#res.redirect)\r\n\r\nres.redirect([status,] path)\r\n\r\nRedirects to the URL derived from the specified path, with specified status, a positive integer that corresponds to an HTTP status code . If not specified, status defaults to “302 “Found”.\r\n\r\n```\r\n  res.redirect('/foo/bar')\r\n  res.redirect('http://example.com')\r\n  res.redirect(301, 'http://example.com')\r\n  res.redirect('../login')\r\n```\r\n\r\n#### redirect sample\r\n\r\n_server.js_\r\n\r\n```\r\n  app.get('/',(req, res) => {\r\n    res.redirect('/req/weather');\r\n    // this works to redirectthe origin to anywhere\r\n  })\r\n```\r\n\r\n# send html files\r\n[express | docs](https://inspectatech.github.io/notes/?path=/docs/nodejs-express-express-notes--page)   \r\n[Serving Static Files with Node and Express.js](https://stackabuse.com/serving-static-files-with-node-and-express-js/)   \r\n[Serving static assets through wildcard rule](https://codereview.stackexchange.com/questions/29401/serving-static-assets-through-wildcard-rule)   \r\n\r\n[Express.js sendfile() vs. render()](https://stackoverflow.com/questions/23875360/express-js-sendfile-vs-render)   \r\n\r\n_server.js_\r\n\r\n```\r\n    var express = require('express');\r\n    var app = express();\r\n    var path = require('path');\r\n\r\n    // viewed at http://localhost:8080/public\r\n\r\n    // public option\r\n    app.get('/public', function(req, res) {\r\n        // res.sendFile(path.join(__dirname,'../public/index.html'));// works\r\n        // res.sendFile('public/index.html',{ root: path.dirname(__dirname)});// works\r\n        res.sendFile('index.html',{ root: path.join(__dirname,'../public/')});// works\r\n    });\r\n\r\n    app.get('/public/css/*', function(req, res) {\r\n        console.log(req.path);\r\n        res.sendFile(path.join(__dirname,`..${req.path}`));// works\r\n    });\r\n\r\n\r\n    app.listen(8080);\r\n```\r\n> using a wildcard rule also helps locate and render asses like a css file\r\n"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"nodejs/express/express notes",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1114:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"nodejs/express/server walkthrough",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},"# server walkthrough line by line   \r\n<hr/>\r\n\r\n**recommended install dependencies**\r\n\r\n```\r\n  npm i express hbs chalk cors mongoose passport\r\n```\r\n\r\n[path | node.js docs](https://nodejs.org/dist/latest-v15.x/docs/api/path.html#path_path)   \r\nThe path module provides utilities for working with file and directory paths. It can be accessed using:\r\n\r\n```\r\n  const path = require('path');\r\n```\r\n> the path module **doesn't have to be installed** its already available with nodejs\r\n\r\n[Express, a popular Node.js Framework](https://flaviocopes.com/express/)   \r\n\r\nExpress is a Node.js Web Framework. Node.js is an amazing tool for building networking services and applications. Express builds on top of its features to provide easy to use functionality that satisfy the needs of the Web Server use-case.\r\n\r\n[express | npm](https://www.npmjs.com/package/express)\r\n\r\n```\r\n  const express = require('express');\r\n  const app = express();\r\n```\r\nimport and  initialize express then instantiate an express app   \r\n\r\n[What is the difference between “instantiated” and “initialized”?](https://stackoverflow.com/questions/2330767/what-is-the-difference-between-instantiated-and-initialized)   \r\n\r\n#### setup [express json](http://expressjs.com/en/api.html#express.json)   \r\n\r\n```\r\n  app.use(express.json());\r\n```\r\n> no longer bodyParser.json now using express.json\r\n\r\nThis is a built-in middleware function in Express. It parses incoming requests with JSON payloads and is based on body-parser.\r\n\r\nA new body object containing the parsed data is populated on the request object after the middleware (i.e. req.body), or an empty object ({}) if there was no body to parse, the Content-Type was not matched, or an error occurred.\r\n\r\n#### [chalk (optional)](https://www.npmjs.com/package/chalk)   \r\n\r\nTerminal string styling done right   \r\n\r\n```\r\n  const chalk = require('chalk');\r\n```\r\n\r\n**usage**\r\n\r\n```\r\n  const chalk = require('chalk');\r\n\r\n  console.log(chalk.blue('Hello world!'));\r\n```\r\n\r\n#### set your port\r\n\r\n```\r\n  let PORT = (os.hostname().includes(\"myDomainName\")) ? 1027 : 3000 ;\r\n```\r\n> checks for live or localhost   \r\n> local doesn't work because my laptop was 'DESKTOP' not local\r\n\r\n#### configure .env keys\r\n\r\n_server.js_\r\n\r\n```\r\n  const Keys = require('./utils/keys').mongodb;\r\n```\r\n\r\n_./utils/keys_\r\n\r\n```\r\n  const dotenv = require('dotenv');\r\n  dotenv.config();\r\n\r\n  module.exports = {\r\n    mongodb:{\r\n      dbURI: process.env.MONGODB_LOCAL_TASK_URI,\r\n      liveURI:process.env.MONGODB_LIVE_TASK_URI,\r\n      db:process.env.MONGODB_LOCAL_DB,\r\n      liveDB:process.env.MONGODB_LIVE_DB,\r\n      localhost:process.env.MONGODB_LOCALHOST_DB\r\n    },\r\n    session:{\r\n      cookieKey:process.env.SESSION_COOKIE_KEY\r\n    }\r\n  }\r\n\r\n```\r\n\r\n_.env_\r\n\r\n```\r\n  JWT_SECRET='XXXXXXXXXXXX'\r\n  GOOGLE_CLIENT_ID='XXXXXXXXXXXX'\r\n  GOOGLE_CLIENT_SECRET='XXXXXXXXXXXX'\r\n  FACEBOOK_CLIENT_ID='XXXXXXXXXXXX'\r\n  FACEBOOK_CLIENT_SECRET='XXXXXXXXXXXX'\r\n  MONGODB_LOCAL_TASK_URI='mongodb://111.11.11.11:????/task-manager-api'\r\n  MONGODB_LIVE_TASK_URI='mongodb://111.11.11.11:????/task-manager-api'\r\n  MONGODB_LOCAL_DB='mongodb://111.11.11.11:????/DBName'\r\n  MONGODB_LIVE_DB='mongodb://111.11.11.11:????/DBName'\r\n  MONGODB_LOCALHOST_DB='mongodb://localhost/DBName'\r\n  SESSION_COOKIE_KEY='XXXXXXXXXXXX'\r\n  YOUTUBE_API_KEY='XXXXXXXXXXXX'\r\n  NODE_ENV='development'\r\n  USE_LOCAL_FILES='false'\r\n```\r\n> set your own data in place of 111.11.11.11 and XXXXXXXXXXXX etc.\r\n\r\n> the .env file should be added to the site root (the folder containing everything)\r\n> **GOTCHA:** in order for dotenv to be able to detect your .env file the server has to be started from the\r\nsame folder the .env file is found in.\r\n\r\nfor example **use this**\r\n\r\n```\r\n  nodemon src/server.js\r\n  // and/or\r\n  pm2 start src/server.js\r\n```\r\n\r\n**not this**\r\n\r\n```\r\n  cd src\r\n  nodemon server.js\r\n  // and/or\r\n  pm2 start server.js\r\n```\r\n> don't navigate into a folder .env isn't contained in to start the server or you loose the .env file\r\n\r\n\r\n#### set up mongoose (optional)\r\n\r\n```\r\n  const mongoose = require('mongoose');\r\n\r\n  ...\r\n\r\n  let dbConnect = (os.hostname().includes(\"mySiteDomain\")) ? Keys.liveDB : Keys.db;\r\n  mongoose.connect(dbConnect,{ useNewUrlParser: true, useUnifiedTopology: true });\r\n\r\n  mongoose.set('useFindAndModify', false);\r\n  mongoose.set('useCreateIndex', true);\r\n```\r\n\r\n\r\n#### [Using template engines with Express](https://expressjs.com/en/guide/using-template-engines.html)   \r\n[Template engines | express docs](https://expressjs.com/en/resources/template-engines.html)   \r\n\r\nA **template engine** enables you to use static template files in your application. At runtime, the template engine replaces variables in a template file with actual values, and transforms the template into an HTML file sent to the client. This approach makes it easier to design an HTML page.\r\n\r\n[Express.js view engine (template engine) for handlebars.js](https://www.npmjs.com/package/hbs)   \r\n\r\n```\r\n  const hbs = require('hbs');\r\n```\r\n\r\n#### hbs usage\r\n> set view engine, set views, set partials, create helpers if needed\r\n\r\n\r\n_server.js_\r\n\r\n- setup where to look for view directories (an array of view file paths)   \r\n\r\n```\r\n  app.set('view engine', 'hbs');\r\n\r\n  const viewsPath = path.join(__dirname,\"../templates/views\");// default views location\r\n  const appsPath = path.join(__dirname,\"../public/apps/views\");\r\n  ...\r\n\r\n  app.set('views', [viewsPath, appsPath, alightPath, oauthClientPath, businessPath, updraftPath, rocketPath]);//this works\r\n```\r\n\r\n- setup where to look for view partials (hbs views snippets that are shared on multiple views)\r\n\r\n```\r\n  const partialsPath = path.join(__dirname,\"../templates/partials\");\r\n  hbs.registerPartials(partialsPath);\r\n```\r\n\r\n- setup helper functions that are used on server variables to help process view template data\r\n\r\n```\r\n\r\n  hbs.registerHelper('json', function(context) {\r\n    // why stringify the data?\r\n      let data_str = JSON.stringify(context);\r\n      return JSON.stringify(data_str);\r\n  });\r\n\r\n  hbs.registerHelper('vendor', function(name, use_local_files, force_local) {\r\n\r\n    console.log(chalk.red(`[vendor] use_local_files`),name, typeof name);\r\n    console.log(chalk.red(`[vendor] use_local_files`),use_local_files, typeof use_local_files);\r\n\r\n    // console.log(chalk.red(`[vendor] force_local`),force_local, typeof force_local);\r\n\r\n    let force_local_file = (typeof force_local == \"boolean\" && force_local == true) ? true : false;\r\n      return (typeof use_local_files == \"string\" && use_local_files == \"true\" || force_local_file ) ?\r\n      `${name}_local` : name;\r\n\r\n  });\r\n```\r\n\r\n_views/sample.hbs_ (similar to an index.html file)\r\n\r\n```\r\n  {{>(vendor 'bootstrap' use_local_files true)}}\r\n\r\n  {{>pp_head}}\r\n\r\n  window['HOST_DATA'] = JSON.parse({{{json data}}});\r\n```\r\n\r\nvendor used a registered helper and a use\\_local\\_files variable from the server\r\npp_head is using a partial to add profile panel html elements to the head section of the html\r\njson data is using the json registered helper to process server generated json data\r\n\r\n#### setup server router result data to be processed by the client side views\r\n\r\n_routers/alight.js_ > firestarter route\r\n\r\n```\r\n  res.render(toolname, {\r\n    title:'push tester',\r\n    name: 'your pusher',\r\n    use_local_files: keys.use_local_files,\r\n    data\r\n  });// render\r\n```\r\n> render data\r\n\r\n#### set all routes to use the public directory (root)\r\n> this allows all views reference to scripts and links to work. it helps their paths refererence the root directory.\r\n\r\n```\r\n  const publicDirectoryPath = path.join(__dirname,\"../public\");\r\n\r\n  app.use('/',express.static(publicDirectoryPath));\r\n\r\n  app.use('/updraft',express.static(publicDirectoryPath));//\r\n  app.use('/updraft/:val1?',express.static(publicDirectoryPath));// needed for the links and scripts to work\r\n  app.use('/updraft/:val1?/:val2?',express.static(publicDirectoryPath));\r\n\r\n  app.use('/auth',express.static(publicDirectoryPath));\r\n```\r\n\r\n#### set up path to routers\r\n\r\n```\r\n  const updraftRouter = require(\"../public/updraftjs/routers/updraft\");\r\n\r\n  ...\r\n\r\n  app.use('/auth', require('../public/oauth_client/routers/auth'));\r\n  app.use('/updraft',updraftRouter);\r\n```\r\n> im sure you could require it in directly (like i did for one router) but most were set up the traditional way where require was called higher upin the page and the variable was set into the .use method\r\n\r\n#### to add a new page feature:\r\n\r\n1. add its new location path to the server block\r\n\r\n2. add the new page directory to public\r\n  - page directory should include its own views, and router/routes folder along with all its logic and styles\r\n\r\n*_wire up the page_*\r\n\r\n3. add its server location path to use the publicDirectoryPath   \r\n\r\n```\r\n  app.use('/newpath',express.static(publicDirectoryPath));\r\n\r\n  // if it uses additonal path values\r\n  app.use('/newpath/:val1?',express.static(publicDirectoryPath));\r\n```\r\n\r\n4. set up the path to the views directory\r\n\r\n```\r\n  const newPath = path.join(__dirname,\"../public/newpathjs/views\");\r\n```\r\n- and add the view path to the set views method array   \r\n\r\n```\r\n  app.set('view engine', 'hbs');\r\n  app.set('views', [previousViewsPath,  newPath]);\r\n```\r\n\r\n5. set up the path to its router file(s)\r\n\r\n```\r\n  const newPathRouter = require(\"../public/newpathjs/routers/newpath\");\r\n\r\n  app.use('/newpath',newPathRouter);\r\n```\r\n\r\nthats it.  \r\n> that should be all the customization you have to do in the server.js file - everything else should be done in the new page's directory\r\n\r\n\r\n#### setup any catchall routes\r\n\r\n- a root redirect (optional)\r\n\r\n```\r\n  app.get('/', (req, res) => {\r\n    res.redirect('/core');\r\n  })\r\n\r\n```\r\n\r\n- a 404 page\r\n\r\n```\r\n\r\n  //catchall has to be last to work\r\n  app.get('*', cors(corsOptions), (req, res) => {\r\n    // res.send('my 404 page')\r\n    if(display_console || true) console.log('[express server] rendering 404')\r\n    res.render('404', {\r\n      title:'404',\r\n      errorMessage:'page not found'\r\n    });\r\n\r\n  });\r\n```\r\n\r\n#### start your server\r\n\r\n```\r\n  if(display_console || true) console.log(\"[prepping server] ... \");\r\n\r\n  app.listen(PORT, () => {\r\n    if(display_console || true) console.log(`Server is up on port ${PORT}.`);\r\n    process_memory();\r\n  })\r\n```\r\n"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"nodejs/express/server walkthrough",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1115:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2),addon_links_react=__webpack_require__(46),addon_links_react_default=__webpack_require__.n(addon_links_react);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"nodejs/npm packages/code samples/basic main.js sample",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},"# main.js (basic version)   \r\n<br/>   \r\n\r\n```\r\n  import chalk from 'chalk';\r\n  import fs from 'fs';\r\n  import ncp from 'ncp';\r\n  import path from 'path';\r\n  import {promisify} from 'util';\r\n  import { fileURLToPath } from 'url';\r\n\r\n  const access = promisify(fs.access);\r\n  const copy = promisify(ncp);\r\n\r\n  async function copyTemplateFiles(options) {\r\n    // not sure why this is async it doesn't use await - i ran it without async it works fine\r\n    try {\r\n\r\n      return copy(options.templateDirectory, options.targetDirectory, {\r\n        clobber: false\r\n      });\r\n    } catch (e) {\r\n      console.log(`%s[copyTemplateFiles] an error occured`,chalk.red.bold(\"Error\"));\r\n    } // catch\r\n  }// copyTemplateFiles\r\n\r\n  export async function createProject(options){\r\n    options = {\r\n      ...options,\r\n      targetDirectory: options.targetDirectory || process.cwd()\r\n    }// options\r\n\r\n    const currentFileUrl  = import.meta.url;// idk what this is\r\n\r\n    console.log('[currentFileUrl]',currentFileUrl);\r\n    console.log('[newPathName]',new URL(currentFileUrl));\r\n    console.log('[dirname]',__dirname);\r\n    console.log('[path dirname]',path.dirname(fileURLToPath(currentFileUrl)));\r\n\r\n    const templateDir = path.resolve(\r\n      // new URL(currentFileUrl).pathname,\r\n      // __dirname,\r\n      path.dirname(fileURLToPath(currentFileUrl)),\r\n      '../templates',\r\n      options.template.toLowerCase()\r\n    );\r\n\r\n    console.log(\"[templateDir]\",templateDir);\r\n\r\n    options.templateDirectory = templateDir;\r\n\r\n    try {\r\n      // try to read from the template\r\n      await access(templateDir, fs.constants.R_OK);\r\n    } catch (e) {\r\n      console.error(\"%s Invalid template name\", chalk.red.bold(\"ERROR\"));\r\n      process.exit(1);\r\n    }// catch\r\n\r\n    console.log(\"Copy project files\");\r\n    await copyTemplateFiles(options);\r\n\r\n      console.log('%s Project ready', chalk.green.bold('DONE'));\r\n\r\n      return true;\r\n\r\n    } catch (e) {\r\n      console.log(`%s[Listr] an error occured`,chalk.red.bold(\"Error\"));\r\n    }// catch\r\n\r\n  }// createProject\r\n\r\n```\r\n"),Object(esm.mdx)("br",null),Object(esm.mdx)(addon_links_react_default.a,{kind:"nodejs/npm packages/create-project notes",style:{color:"#1474f3",textDecoration:"none"},mdxType:"LinkTo"},"packages create-project notes"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"nodejs/npm packages/code samples/basic main.js sample",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1116:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2),addon_links_react=__webpack_require__(46),addon_links_react_default=__webpack_require__.n(addon_links_react);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"nodejs/npm packages/code samples/cli.js sample",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},'# cli.js sample   \r\n<br/>   \r\n\r\n```\r\n  import arg from \'arg\';\r\n  import inquirer from \'inquirer\';\r\n  import {createProject} from \'./main\';\r\n\r\n  function parseArgumentsToOptions(rawArgs){\r\n    const args = arg(\r\n      {\r\n        "--git":Boolean,\r\n        "--yes":Boolean,\r\n        "--install":Boolean,\r\n        "-g":"--git",\r\n        "-y":"--yes",\r\n        "-i":"--install"\r\n      },\r\n      {\r\n        argv: rawArgs.slice(2),\r\n      }\r\n    );\r\n    return {\r\n      skipPrompts: args[\'--yes\'] || false,\r\n      git: args[\'--git\'] || false,\r\n      template: args._[0],\r\n      runInstall: args[\'--install\'] || false\r\n    };\r\n  }\r\n\r\n  async function promptForMissingOptions(options) {\r\n    const defaultTemplate = "JavaScript";\r\n\r\n    if(options.skipPrompts){\r\n      return {\r\n        ...options,\r\n        template: options.template || defaultTemplate\r\n      };\r\n    }// end if .skipPrompts\r\n\r\n    const questions = [];\r\n\r\n    if(!options.template){\r\n      questions.push({\r\n        type: "list",\r\n        name: "template",\r\n        message: "Please choose which project template to use",\r\n        choices: ["JavaScript", "Typescript"],\r\n        default: defaultTemplate\r\n      });\r\n    }// end if !.template\r\n\r\n    if(!options.git){\r\n      questions.push({\r\n        type: "confirm",\r\n        name: "git",\r\n        message: "Initialize a git repository?",\r\n        default: false\r\n      })\r\n    }// end if !.git\r\n\r\n    const answers = await inquirer.prompt(questions);\r\n\r\n    return {\r\n      ...options,\r\n      template: options.template || answers.template,\r\n      git: options.git || answers.git\r\n    }// return\r\n  }// promptForMissingOptions\r\n\r\n  export async function cli (args) {\r\n    let options = parseArgumentsToOptions(args);\r\n    options = await promptForMissingOptions(options);\r\n\r\n    // console.log(options);\r\n    await createProject(options);\r\n  }\r\n\r\n```\r\n'),Object(esm.mdx)("br",null),Object(esm.mdx)(addon_links_react_default.a,{kind:"nodejs/npm packages/create-project notes",style:{color:"#1474f3",textDecoration:"none"},mdxType:"LinkTo"},"packages create-project notes"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"nodejs/npm packages/code samples/cli.js sample",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1117:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2),addon_links_react=__webpack_require__(46),addon_links_react_default=__webpack_require__.n(addon_links_react);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"nodejs/npm packages/create-project notes",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},'# create-project\r\n\r\n## [How to build a CLI with node.js (tutorial)](https://www.youtube.com/watch?v=s2h28p4s-Xs&feature=youtu.be)   \r\n\r\n*__Awesome Tutorial__*\r\n\r\n- a small adjustment on **import.meta.url**\r\n\r\n## usage   \r\n\r\n- create and navigate into the target directory\r\n\r\n```\r\n  mkdir my-dir-name && cd my-dir-name\r\n```\r\n\r\n- run the project creator\r\n\r\n```\r\n  npx @techthehood/create-project\r\n```\r\nfollow the prompts if any or add flags\r\n\r\n```\r\n  --yes or -y [to skip prompts]\r\n  --git or -g [initilizes git in your project]\r\n  --install or -i [auto install node packages]\r\n\r\n  if you know the available templates you can also add a string with the templates name - otherwise it will prompt and ask you which template you want to use\r\n```\r\n\r\n```\r\n  npx @techthehood/create-project --yes\r\n\r\n  or\r\n\r\n  npx @techthehood/create-project -g -i basic\r\n```\r\n\r\n\r\nthats it.\r\n<br/>\r\n<hr/>\r\n<br/>\r\n## other notes   \r\n\r\n#### package.json hightlights   \r\n\r\n```\r\n  {  \r\n    ...\r\n\r\n    "bin": {\r\n      "@scopedPkgName/create-project": "bin/create-project",\r\n      "create-project": "bin/create-project"\r\n    },\r\n    "publishConfig": {\r\n      "access": "public"\r\n    },\r\n    "keywords": [\r\n      "cli",\r\n      "create-project"\r\n    ],\r\n    "repository":{\r\n      "type": "git",\r\n      "url":"https://github.com/scopedPkgName/create-project.git"\r\n    },\r\n    "bugs":{\r\n      "url":"https://github.com/scopedPkgName/create-project/issues"\r\n    },\r\n    "homepage":"https://github.com/scopedPkgName/create-project",\r\n    ...\r\n  }\r\n```\r\n\r\n#### What is esm?   \r\n- esm allows us to us es modules without needing to transpile to different node js\r\nversions that may not have that support\r\n\r\n[esm on npm](https://www.npmjs.com/package/esm)   \r\n\r\n> The brilliantly simple, babel-less, bundle-less ECMAScript module loader.\r\n\r\n```\r\n  npm i esm\r\n```   \r\n<br/>\r\n### using comments in create-project script   \r\n\r\n**GOTCHA:** this also is running node so it takes regular node comments\r\n\r\n```\r\n  npm i arg inquirer\r\n```\r\n\r\n```\r\n  // using template: args instead of template: args._[0]\r\n  $ create-project cli --git\r\n\r\n  // returns\r\n  {\r\n    skipPrompts: false,\r\n    git: true,\r\n    template: { _: [ \'cli\' ], \'--git\': true },\r\n    runInstall: false\r\n  }\r\n\r\n```\r\n> according to what printed on the console log, the value looks like all the other arguments that aren\'t the specifically named ones in the arg() setup were added to an array object named "\\_" i.e. _:[...theRest]\r\n\r\n#### what is ncp?   \r\n\r\n[ncp - Asynchronous recursive file & directory copying](https://www.npmjs.com/package/ncp)      \r\n\r\n> install ncp to copy some template files over\r\n\r\n```\r\n  npm i ncp chalk\r\n```\r\n\r\n#### [using %s](https://stackoverflow.com/questions/6999572/what-does-s-mean-inside-a-string-literal#:~:text=%25s%20is%20a%20C%20format%20specifier%20for%20a%20string.&text=the%20%25s%20is%20a%20\'format,contents%20of%20the%20command%20variable.)      \r\n\r\n```\r\n  console.log("%s Project ready", chalk.green.bold(\'DONE\'));\r\n  console.log(\'%s Project ready\', chalk.green.bold(\'DONE\'));\r\n```\r\nboth do the same thing. it somehow puts the txt at the end.   \r\n\r\n>%s is a C format specifier for a string. ... the %s is a \'format character\', indicating "insert a string here". The extra parameters after the string in your two function calls are the values to fill into the format character placeholders: In the first example, %s will be replaced with the contents of the command variable.\r\n\r\n#### **GOTCHA**: getting the path right\r\n\r\n```\r\n  const currentFileUrl  = import.meta.url;// idk what this is\r\n  // returns - C:\\C:\\Users\\...\\templateName\r\n\r\n  console.log(\'[currentFileUrl]\',currentFileUrl);\r\n  console.log(\'[newPathName]\',new URL(currentFileUrl));\r\n  console.log(\'[dirname]\',__dirname);\r\n  console.log(\'[path dirname]\',path.dirname(fileURLToPath(currentFileUrl)));\r\n\r\n  const templateDir = path.resolve(\r\n    // new URL(currentFileUrl).pathname,\r\n    // __dirname,\r\n    path.dirname(fileURLToPath(currentFileUrl)),\r\n    \'../templates\',\r\n    options.template.toLowerCase()\r\n  );\r\n\r\n  console.log("[templateDir]",templateDir);\r\n\r\n  options.templateDirectory = templateDir;\r\n\r\n```\r\n> notice under currentFileUrl the C:\\C:\\ at the beginning. i had to use __dirname to fix it. not i need to research why the author used something else in the first place.\r\n\r\n#### a working compromise\r\n\r\n>this also works and may fix possible limitations with linux on the server where **\\__dirname** may not work - i need to test on the server. if **\\__dirname** works on the server then nothing else is needed.\r\n\r\n```\r\n  import { fileURLToPath } from \'url\';\r\n\r\n  console.log(\'[path dirname]\',path.dirname(fileURLToPath(currentFileUrl)));\r\n```\r\n\r\nNote: if you run it again after the files are created it looks like it does it again but it does nothing.\r\n\r\n#### finishing up initializing git and installing the pkgs   \r\n\r\n```\r\n  npm i execa pkg-install listr\r\n```\r\n\r\n#### initialize git install pkgs and run tasks   \r\n\r\nimport the pkgs   \r\n\r\n_main.js_\r\n\r\n```\r\n  import execa from \'execa\';\r\n  import Listr from \'listr\';\r\n  import {projectInstall} from \'pkg-install\';\r\n```\r\n\r\ninit git - uses **execa**\r\n\r\n```\r\n  async function initGit(options) {\r\n    try {\r\n\r\n      const result = await execa("git",["init"], {\r\n        cwd: options.targetDirectory\r\n      });\r\n\r\n      if(result.failed) {\r\n        return Promise.reject(new Error("Failed to initialize Git"));\r\n      }// if\r\n\r\n      return;\r\n    } catch (e) {\r\n      console.log(`%s[initGit] an error occured`,chalk.red.bold("Error"));\r\n    }\r\n  }// initGit\r\n```\r\nListr is responsible for running tasks one of which installs the npm pkgs\r\n\r\n```\r\n  projectInstall({\r\n    cwd: options.targetDirectory\r\n  })\r\n```\r\n\r\n```\r\n  const tasks = new Listr([\r\n    {\r\n      title: "Copy project files",\r\n      task: () => copyTemplateFiles(options),\r\n    },\r\n    {\r\n      title: "Initialize git",\r\n      task: () => initGit(options),\r\n      enabled: () => options.git\r\n    },\r\n    {\r\n      title: "Install dependencies",\r\n      task: () => projectInstall({\r\n        cwd: options.targetDirectory\r\n      }),\r\n      skip: () => !options.runInstall ? "Pass --install to automatically install dependencies" : undefined\r\n    }\r\n  ]);\r\n\r\n  await tasks.run();\r\n```\r\n> notice "enabled" and "skip" both are conditions that will stop the execution of the associated task\r\n\r\n#### all pkgs\r\n```\r\n  npm i esm arg inquirer ncp chalk execa pkg-install listr\r\n```\r\n'),Object(esm.mdx)("br",null),Object(esm.mdx)("br",null),Object(esm.mdx)(addon_links_react_default.a,{kind:"nodejs/npm packages/code samples/basic main.js sample",style:{color:"#1474f3",textDecoration:"none"},mdxType:"LinkTo"},"sample code: main.js (basic version)"),Object(esm.mdx)("br",null),Object(esm.mdx)("br",null),Object(esm.mdx)(addon_links_react_default.a,{kind:"nodejs/npm packages/code samples/full main.js sample",style:{color:"#1474f3",textDecoration:"none"},mdxType:"LinkTo"},"sample code: main.js (full version)"),Object(esm.mdx)("br",null),Object(esm.mdx)("br",null),Object(esm.mdx)(addon_links_react_default.a,{kind:"nodejs/npm packages/code samples/cli.js sample",style:{color:"#1474f3",textDecoration:"none"},mdxType:"LinkTo"},"sample code: cli.js"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"nodejs/npm packages/create-project notes",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1118:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2),addon_links_react=__webpack_require__(46),addon_links_react_default=__webpack_require__.n(addon_links_react);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"nodejs/npm packages/code samples/full main.js sample",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},"# main.js (full version)   \r\n<br/>   \r\n\r\n```\r\n  import chalk from 'chalk';\r\n  import fs from 'fs';\r\n  import ncp from 'ncp';\r\n  import path from 'path';\r\n  import {promisify} from 'util';\r\n  import { fileURLToPath } from 'url';\r\n\r\n  import execa from 'execa';\r\n  import Listr from 'listr';\r\n  import {projectInstall} from 'pkg-install';\r\n\r\n  const access = promisify(fs.access);\r\n  const copy = promisify(ncp);\r\n\r\n  async function copyTemplateFiles(options) {\r\n    // not sure why this is async it doesn't use await - i ran it without async it works fine\r\n    try {\r\n\r\n      return copy(options.templateDirectory, options.targetDirectory, {\r\n        clobber: false\r\n      });\r\n    } catch (e) {\r\n      console.log(`%s[copyTemplateFiles] an error occured`,chalk.red.bold(\"Error\"));\r\n    } // catch\r\n  }// copyTemplateFiles\r\n\r\n  async function initGit(options) {\r\n    try {\r\n\r\n      const result = await execa(\"git\",[\"init\"], {\r\n        cwd: options.targetDirectory\r\n      });\r\n\r\n      if(result.failed) {\r\n        return Promise.reject(new Error(\"Failed to initialize Git\"));\r\n      }// if\r\n\r\n      return;\r\n    } catch (e) {\r\n      console.log(`%s[initGit] an error occured`,chalk.red.bold(\"Error\"));\r\n    }\r\n  }// initGit\r\n\r\n  export async function createProject(options){\r\n    options = {\r\n      ...options,\r\n      targetDirectory: options.targetDirectory || process.cwd()\r\n    }// options\r\n\r\n    const currentFileUrl  = import.meta.url;// idk what this is\r\n\r\n    console.log('[currentFileUrl]',currentFileUrl);\r\n    console.log('[newPathName]',new URL(currentFileUrl));\r\n    console.log('[dirname]',__dirname);\r\n    console.log('[path dirname]',path.dirname(fileURLToPath(currentFileUrl)));\r\n\r\n    const templateDir = path.resolve(\r\n      // new URL(currentFileUrl).pathname,\r\n      // __dirname,\r\n      path.dirname(fileURLToPath(currentFileUrl)),\r\n      '../templates',\r\n      options.template.toLowerCase()\r\n    );\r\n\r\n    console.log(\"[templateDir]\",templateDir);\r\n\r\n    options.templateDirectory = templateDir;\r\n\r\n    try {\r\n      // try to read from the template\r\n      await access(templateDir, fs.constants.R_OK);\r\n    } catch (e) {\r\n      console.error(\"%s Invalid template name\", chalk.red.bold(\"ERROR\"));\r\n      process.exit(1);\r\n    }// catch\r\n\r\n    // console.log(\"Copy project files\");\r\n    // await copyTemplateFiles(options);\r\n    try {\r\n\r\n      const tasks = new Listr([\r\n        {\r\n          title: \"Copy project files\",\r\n          task: () => copyTemplateFiles(options),\r\n        },\r\n        {\r\n          title: \"Initialize git\",\r\n          task: () => initGit(options),\r\n          enabled: () => options.git\r\n        },\r\n        {\r\n          title: \"Install dependencies\",\r\n          task: () => projectInstall({\r\n            cwd: options.targetDirectory\r\n          }),\r\n          skip: () => !options.runInstall ? \"Pass --install to automatically install dependencies\" : undefined\r\n        }\r\n      ]);\r\n\r\n      await tasks.run();\r\n\r\n      console.log('%s Project ready', chalk.green.bold('DONE'));\r\n\r\n      return true;\r\n\r\n    } catch (e) {\r\n      console.log(`%s[Listr] an error occured`,chalk.red.bold(\"Error\"));\r\n    }// catch\r\n\r\n  }// createProject\r\n\r\n```\r\n"),Object(esm.mdx)("br",null),Object(esm.mdx)(addon_links_react_default.a,{kind:"nodejs/npm packages/create-project notes",style:{color:"#1474f3",textDecoration:"none"},mdxType:"LinkTo"},"packages create-project notes"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"nodejs/npm packages/code samples/full main.js sample",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1119:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2);__webpack_require__(46);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"nodejs/npm packages/packages notes",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},"# create custom npm packages   \r\n\r\n## articles   \r\n[How to Build and Publish NPM packages with Webpack](https://itnext.io/how-to-build-and-publish-npm-packages-with-webpack-dea19bb14627)   \r\n[Writing & Publishing your First NPM Package!](https://youtu.be/4zzbNac6f6Q)   \r\n[What are peer dependencies in a Node module?](https://flaviocopes.com/npm-peer-dependencies/)   \r\n[SOLVING REACT HOOKS' INVALID HOOK CALL WARNING](https://robkendal.co.uk/blog/2019-12-22-solving-react-hooks-invalid-hook-call-warning)   \r\n[How to build a CLI with Node.js](https://www.twilio.com/blog/how-to-build-a-cli-with-node-js)   \r\n\r\n\r\n### web package\r\n\r\n\r\n### react package\r\n\r\n[webpack externals](https://webpack.js.org/configuration/externals/)   \r\n\r\n_webpack.config.js_\r\n\r\n```\r\n  externals: {\r\n        'react': 'react',\r\n        'react-dom':'react-dom'\r\n  },//used to maintain access to CDN global variables\r\n\r\n\r\n  // fails\r\n  // 'react': 'React',\r\n  // 'react-dom':'ReactDOM'/*,\r\n```\r\n\r\n#### adding peer dependencies   \r\n\r\n[peer dependency](https://stackoverflow.com/questions/60584098/does-npm-have-a-flag-for-peer-dependency-install)   \r\n[npm link, peerDependencies and webpack](https://medium.com/@penx/managing-dependencies-in-a-node-package-so-that-they-are-compatible-with-npm-link-61befa5aaca7)   \r\n\r\n_package.json_\r\n\r\n```\r\n  \"peerDependencies\":{\r\n    \"react\": \"^16.14.0\",\r\n    \"react-dom\": \"^16.14.0\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@babel/runtime\": \"^7.2.0\",\r\n    \"react\": \"^17.0.1\",\r\n    \"react-dom\": \"^17.0.1\"\r\n  }\r\n```\r\n\r\n> i lowered the react and react-dom version to match the react of the target repository   \r\n> im not sure if this helped - i need more experiments\r\n\r\nStarting with NPM v3.0, peer dependencies are not automatically installed on npm install, and it can be a hassle to install them all manually. The install-peerdeps tool makes the process fast and easy.   \r\n\r\n[webpack output](https://webpack.js.org/configuration/output/#outputumdnameddefine)   \r\n\r\n_webpack.config.js_\r\n\r\n```\r\n  output: {\r\n      filename:'d3po_ITKR.js',\r\n      library:'D3poITKR',\r\n      libraryTarget:'umd',\r\n      globalObject:'this',\r\n      umdNamedDefine: true\r\n  },\r\n```\r\n\r\n### node package\r\n\r\n\r\n\r\n```\r\n  npm publish\r\n```\r\n"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"nodejs/npm packages/packages notes",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1120:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2),addon_links_react=__webpack_require__(46),addon_links_react_default=__webpack_require__.n(addon_links_react);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"nodejs/npm packages/code samples/package.json sample",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},'# package.json sample\r\n<br/>    \r\n\r\n```\r\n  {\r\n    "name": "@scopedPkgName/create-project",\r\n    "version": "1.0.0",\r\n    "description": "A CLI to bootstrap my projects",\r\n    "main": "src/index.js",\r\n    "bin": {\r\n      "@scopedPkgName/create-project": "bin/create-project",\r\n      "create-project": "bin/create-project"\r\n    },\r\n    "publishConfig": {\r\n      "access": "public"\r\n    },\r\n    "scripts": {\r\n      "test": "echo \\"Error: no test specified\\" && exit 1"\r\n    },\r\n    "keywords": [\r\n      "cli",\r\n      "create-project"\r\n    ],\r\n    "author": "",\r\n    "license": "ISC",\r\n    "dependencies": {\r\n      "arg": "^5.0.0",\r\n      "chalk": "^4.1.0",\r\n      "esm": "^3.2.25",\r\n      "execa": "^5.0.0",\r\n      "inquirer": "^7.3.3",\r\n      "listr": "^0.14.3",\r\n      "ncp": "^2.0.0",\r\n      "pkg-install": "^1.0.0"\r\n    }\r\n  }\r\n\r\n```\r\n'),Object(esm.mdx)("br",null),Object(esm.mdx)(addon_links_react_default.a,{kind:"nodejs/npm packages/create-project notes",style:{color:"#1474f3",textDecoration:"none"},mdxType:"LinkTo"},"packages create-project notes"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"nodejs/npm packages/code samples/package.json sample",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1121:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"nodejs/passport/passport notes",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},"# Passport notes\r\n\r\n[A Step-by-Step Guide to Setting Up a Node.js API With Passport-JWT](https://medium.com/better-programming/perfect-structure-to-authenticate-authorize-api-with-node-js-and-passport-jwt-d529b1a618ba)   \r\n\r\npassing data to passport from urls\r\n\r\n_Alight/routers/api_\r\n\r\n```\r\n  router.all('/*', cors(corsOptions), passportJWT,  async (req, res, next) => {\r\n    console.log('[cors/passport] passed');\r\n    next();\r\n  })\r\n\r\n  router.use(\"/items\",items);\r\n  router.use(\"/users\",users);\r\n  router.use(\"/arc\",arc);\r\n```\r\n<br/>\r\n\r\n#### JWT_TOKEN   \r\n\r\n  - where are jwtTokens first created and saved | **OAClient-actions**\r\n\r\n_public/oauth-client/src/js/actions/index.js_\r\n\r\n  \x3c!-- [**OAClient-actions**]{@link module:OAClient-actions-oauthGoogle} --\x3e\r\n\r\n```\r\nexport const signIn = (data) => {\r\n  return async (dispatch) => {\r\n\r\n  ...\r\n\r\n  const res = await axios.post(`${location.origin}/api/auth/signin`, data);\r\n\r\n      console.log(\"[axios res]\",res);\r\n\r\n      console.log('[ActionCreator] signIn dispatched an action!');\r\n      dispatch({\r\n        type: AUTH_SIGN_IN,\r\n        payload: res.data.token\r\n      });\r\n\r\n      localStorage.setItem('JWT_TOKEN', res.data.token);\r\n      axios.defaults.headers.common['Authorization'] = res.data.token;\r\n\r\n    ...\r\n```\r\n\r\n  - where is passport first connected with a config file? | **express-server**   \r\n  \x3c!-- [**express-server**]{@link module:express-server} --\x3e\r\n\r\n  _src/index.js_   \r\n\r\n  ```\r\n  const passport = require('passport');\r\n  const passportConfig = require('./oauth_server/passport');\r\n  ```\r\n\r\n  - where is the basic token first added to a header | [app.js]{@link module:App}\r\n\r\n\r\n  - where is the passportJWT being set for all routes? | **alight-api**\r\n  \x3c!-- [**alight-api**]{@link module:alight-api}    --\x3e\r\n\r\n  _public/alight/routers/api.js_\r\n\r\n```\r\n  const passport = require('passport');\r\n  const passportJWT = passport.authenticate('jwt', {session: false, failureRedirect: '/auth'});\r\n\r\n  ...\r\n\r\n  router.all('/*', cors(corsOptions), passportJWT,  async (req, res, next) => {\r\n    if(display_console || false) console.log('[cors/passport] passed');\r\n    next();\r\n  })\r\n```\r\n\r\n> in src/index.js server there are 2 routes to target:   \r\n> const arcPagesRouter = require(\"../public/alight/routers/alight\"); - has no knowledge of jwtToken   \r\n> const arcAPIRouter = require(\"../public/alight/routers/api\"); - processes jwtTokens\r\n\r\n  - where are jwtTokens verified on each request? | [**JwtStrategy**]{@link module:passport~JwtStrategy}\r\n  - where is it determined whose project im looking at?\r\n    - A: on the server by url | [firestarter **send_host**]{@link module:firestarter~send_host}\r\n    - this sets window['HOST_DATA'] (or not) in views/alight.hbs | [**alight.hbs**]{@link module:alight-hbs}\r\n\r\n  - where is the viewer determined? | [App **get-user-prefs**]{@link module:App~get-user-prefs}\r\n  - where is the viewer data determined? | [api/alight/users **getUserPrefs**]{@link module:api-alight-users~getUserPrefs}\r\n  - how does the core know i have editor access? | []{@link module:}\r\n\r\n#### to verify tokens manually   \r\n\r\n_signToken.js_ >   \r\n\r\n```\r\n  const verifyToken = (token, raw = false) => {\r\n    let verifier;\r\n    let project_claim = `${namespace}project_id`;\r\n    try {\r\n      verifier = JWT.verify(token, JWT_SECRET);\r\n      if(display_console || false) console.log(`[verifyToken] verifier`,verifier);\r\n    } catch (e) {\r\n      // verifier will still be undefined if error\r\n      console.error(e);\r\n    }\r\n\r\n    return (raw) ? verifier : (verifier != undefined) ? { user_id: verifier.sub, project_id: verifier[`${project_claim}`] } : verifier;\r\n  }// verifyToken\r\n```\r\n\r\n#### where is the project token first called?\r\n\r\n_App.js_\r\n\r\n```\r\n\tif(!project_token_response.data.error && project_token_response.data.token != undefined){\r\n\t\tlet project_token = project_token_response.data.token;\r\n\t\tsessionStorage.setItem(\"project_token\",project_token);\r\n\r\n\t\taxios.defaults.headers.common['Authorization'] = project_token;\r\n\t}//if\r\n```\r\n\r\n#### where is the project token created?   \r\n\r\n_alight/controllers/lib/getProjectToken.js_\r\n\r\n#### how is the project token verified? A: same as the jwtToken   \r\n\r\npassport.js > JwtStrategy   \r\n\r\n```\r\n  passport.use( new JwtStrategy({\r\n    jwtFromRequest: ExtractJwt.fromHeader('authorization'),\r\n    secretOrKey: JWT_SECRET\r\n  },\r\n    async (payload, done) => {\r\n\r\n    ...\r\n\r\n    // check for the existence of a project_id\r\n    let namespace = \"https://sunzao.us/\";\r\n    let project_claim = `${namespace}project_id`;\r\n    if(payload[`${project_claim}`]){\r\n      if(display_console || false) console.log(chalk.yellow(`[JwtStrategy] project_claim detected`),payload);\r\n      user.project_id = payload[`${project_claim}`];\r\n    }\r\n\r\n    ...\r\n```\r\n"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"nodejs/passport/passport notes",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1122:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"react/react-hook-form notes",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},'# react-hook-form notes\r\n\r\n### validation\r\n\r\ninclude errors method   \r\n\r\n```\r\n  // needed to trigger error on change\r\n  const { register, getValues, setValue, handleSubmit, watch, errors } = useForm({mode:"onchange"});\r\n\r\n  let form_data = {register, getValues, setValue, errors};\r\n```\r\n\r\n> Notice the mode: "onchange" property added to the useForm options - this is needed to trigger error checking as you type (idk what the default is)\r\n\r\n<br/>\r\n####i can write the validator properties inside the register method\r\n\r\n```\r\n  <input id={`${prefix}srchInp_TInput`}\r\n  ref={register({required: true})} />\r\n```\r\n**GOTCHA:** mode "onchange" is needed to trigger error on change   \r\n\r\nand ErrorMessage   \r\n\r\n```\r\n\r\n  import { useForm, ErrorMessage } from \'react-hook-form\';\r\n  <div>\r\n    <input id={`${prefix}srchInp_TInput`}\r\n    ref={register({required: true})}\r\n    name={`search_text`}\r\n    />\r\n  </div>\r\n  <ErrorMessage errors={errors} name="search_text" message="This is required" />\r\n```\r\n\r\n> I put the ErrorMessage component under the container for the input and used the same name as the input to reference the input\r\n\r\n**GOTCHA:** i tried using a name different from the input and the ErrorMessage failed   \r\n\r\n<br/>\r\n#### i can disable the go btn by also using the errors name reference   \r\n\r\n```\r\n  <button id={`${prefix}srchInp_inBtn`}\r\n    className={`${prefix}srchInp_inBtn ${prefix}srchInp_inBtn ${prefix}srchInp_inBtn0 inBtn  inbox ui-btn icon-search`}\r\n    onClick={(e) => {\r\n      e.persist();\r\n      if(!errors.search_text){\r\n        //this errors.search_text test works\r\n        mc_search(e,\'\',{state,prefix,form_data})\r\n      }\r\n    }}\r\n  >\r\n  </button>\r\n```\r\n\r\n#### [i can use a form state with this too](https://react-hook-form.com/api/#formState)    \r\n```\r\n  const { register, getValues, setValue, handleSubmit, watch, errors, formState } = useForm({mode:"onchange"});\r\n  const { dirty, isSubmitting, touched, submitCount, isValid } = formState;\r\n\r\n  ...\r\n\r\n  if(!errors.search_text && isValid){\r\n    //this errors.search_text test works\r\n    mc_search(e,\'\',{state,prefix,form_data})\r\n  }\r\n```\r\n\r\nI can also add the error message to the input and reference it in the ErrorMessage   \r\n\r\n```\r\n  <input id={`${prefix}srchInp_TInput`}\r\n  ref={register({required: "This is required"})}\r\n  name={`search_text`}\r\n  />\r\n  <ErrorMessage errors={errors} name="search_text">\r\n    {({ message }) => <p>{message}</p>}\r\n  </ErrorMessage>\r\n```\r\n\r\n> this version will display whatever message is added as a string to the false outcome of any validation test\r\n\r\n#### can i use validator.js with this?\r\n\r\n```\r\n  const validateSearchText = (value) => {\r\n    // await sleep(1000);\r\n    let is_valid = (value == "bill") ? true : false;\r\n    return is_valid;\r\n  }\r\n\r\n\r\n  <input id={`${prefix}srchInp_TInput`}\r\n  ref={register({required: "This is required", validate: validateSearchText})}\r\n  />\r\n```\r\n\r\n#### GOTCHA: [Why is first keystroke not working?](https://react-hook-form.com/faqs)      \r\n\r\n>Double check if you are using value instead of defaultValue.\r\n\r\n>React Hook Form is built based on uncontrolled input, which means you don\'t need to change input value via state by onChange. Hence you don\'t need value at all, in fact, you only need defaultValue for initial input value.\r\n\r\n**USE defaultValue with react-hook-form** - you can still update a state it just won\'t inform the input\r\n\r\n#### passing message from validation function   \r\n\r\n```\r\n  const validateSearchText = (value) => {\r\n    // await sleep(1000);\r\n    let is_valid = isAlphanumeric(value);\r\n\r\n    return is_valid;// original working version without message\r\n\r\n    return (is_valid) ? true : "restricted characters";// works with message string given instead of false value\r\n  }\r\n```\r\n\r\n**GOTCHA:**  function won\'t trigger unless you add options to useForm  \r\n\r\n```\r\n  const { register, getValues, setValue, handleSubmit, watch, errors, formState } = useForm({mode:"onchange"});\r\n```\r\n\r\n#### [Controlled and uncontrolled form inputs in React don\'t have to be complicated](https://goshakkk.name/controlled-vs-uncontrolled-inputs-react/)   \r\n\r\nmy use of uncontrolled component using react-hook-form   \r\n\r\n```\r\n  <input id={`${prefix}srchInp_TInput`}\r\n    // ref={register}\r\n    ref={register({required: true, validate: validateSearchText})}\r\n    className={`${prefix}srchInp_TInput ${prefix}srchInp_TInput0 srchInp_TInput TInput  inbox`}\r\n    type={`text`}\r\n    name={`search_text`}\r\n    placeholder={`Enter search request`}\r\n    maxLength={`40`}\r\n    // required={false}\r\n    title={`Message title`}\r\n    defaultValue={""}\r\n    // value={searchText}\r\n    // error={!!errors.search_text}\r\n    onFocus={(e) => {\r\n      e.preventDefault();\r\n      e.target.select();\r\n    }}\r\n    // onChange={update_text}\r\n    onKeyPress={(e) => {\r\n      e.persist();\r\n      // let {search_text} = getValues();\r\n      // console.warn("[search_text]",search_text);\r\n      // this is a little less accurate than onchange and onInput but it seems to relay the value accurately with enter\r\n      // which is all i really need\r\n\r\n      let _key = e.which || e.keyCode;\r\n      if (e.which == 13 || e.keyCode == 13)\r\n      {\r\n        // console.warn("[PSP] entering enter...");\r\n        find_it(e);\r\n      }/*else{\r\n        // not needed - does no real work\r\n        update_text();// this may work\r\n      }*/\r\n    }}\r\n  />\r\n```\r\n\r\ni used async/await to set the initial value from localforage (indexedDB)   \r\n\r\n```\r\n  useEffect(() => {\r\n    setInit( (prev) => {return {...prev, start: true};});\r\n\r\n    add_initial_text();\r\n  },[]);\r\n\r\n  const add_initial_text = async () => {\r\n    let stored_session = await my_storage({request: "search"});\r\n\r\n    if(exists(stored_session.bookmarks) && exists(stored_session.bookmarks.request)){\r\n      setValue("search_text",stored_session.bookmarks.request);// i can set the value here\r\n    }\r\n\r\n  }// add_initial_text\r\n```\r\n\r\nthen i can get the data whenever using the input name and getValue from the form methods   \r\n\r\n```\r\n  const { register, getValues, setValue, handleSubmit, watch, errors, formState } = useForm({mode:"onchange"});\r\n\r\n  ...\r\n\r\n  console.log("[title] getValues", getValues());\r\n  let {search_text} = getValues();\r\n```\r\n\r\n#### [use multiple inputs witht the same name](https://github.com/react-hook-form/react-hook-form/issues/1212)   \r\n\r\n```\r\n  const iUN_ref = useRef(Math.round(Math.random() * 10000));//props.iUN || Math.round(Math.random() * 10000)\r\n  let iUN = iUN_ref.current;\r\n```\r\n\r\n**add an iUN that is set once and stays the same throughout the life of the component using userRef**   \r\n\r\nelements/Title/Title.js   \r\n\r\n```\r\n  <input ref={register}\r\n  name={`title_data_${iUN}`}\r\n  onChange={update_title}\r\n  value={unescape(FormStore.item_data.title_data)}\r\n  />\r\n<textarea\r\nname={`desc_data_${iUN}`}\r\nonChange={update_description}\r\nvalue={unescape(FormStore.item_data.desc_data)}\r\n></textarea>\r\n```\r\n\r\n**use an iUN with the element name to add an element of uniqueness to the name string**   \r\n\r\n```\r\n  const update_title = (e) => {\r\n    let value_obj = getValues();\r\n    let title_data = value_obj[`title_data_${iUN}`];\r\n    FormStore.setData("title_data",title_data);\r\n  }//update_title\r\n\r\n  const update_description = (e) => {\r\n    let value_obj = getValues();\r\n    let desc_data = value_obj[`desc_data_${iUN}`];\r\n    FormStore.setData("desc_data",desc_data);\r\n  }//update_description\r\n```\r\n\r\n**refer to the unique (iUN inclusive) string name when using mulitple inputs with same data reference (not same name)**\r\n\r\n```\r\n  const update_title = (e) => {\r\n    let value_obj = getValues();\r\n    let title_data = value_obj[`title_data_${iUN}`];\r\n    FormStore.setData("title_data",title_data);\r\n  }//update_title\r\n```\r\n'))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"react/react-hook-form notes",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1123:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2),addon_links_react=__webpack_require__(46),addon_links_react_default=__webpack_require__.n(addon_links_react);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"Storybook/Docs/mdx component template",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},'# mdx component template\r\n## template for using your .md pages with a component in storybook\r\n_(.md with components)_\r\n\r\n1. copy the code below\r\n2. paste it into a [fileName].stories.mdx file\r\n\r\n```\r\nimport { Meta, Description, DocsContainer, Canvas, ArgsTable, Story } from \'@storybook/addon-docs/blocks\';\r\nimport join_notes from \'../../../xfiles/js/lib/elements/JoinIn/JoinIn.md\';\r\nimport HomeMaker from \'./HomeMaker\';\r\nimport JoinIn from \'../../../xfiles/js/lib/elements/JoinIn\';\r\nimport LinkTo from \'@storybook/addon-links/react\'\r\n\r\n\r\n<Meta title="Access/Join in"\r\n  component={JoinIn}\r\n  argTypes={{\r\n    host_data:{\r\n      control:{type:"object"},\r\n      table:{category:"data"},\r\n      defaultValue:{user_id:"what"}\r\n    }\r\n  }}\r\n  parameters={{\r\n    docs: {\r\n      container: ({ children, context }) => (\r\n        <DocsContainer context={context}>\r\n            <div className="d3-storybook-wrapper" style={{padding: \'0 3rem\'}}>{children}</div>\r\n        </DocsContainer>\r\n      ),\r\n    },\r\n  }}\r\n/>\r\n\r\n<Description>{join_notes}</Description>\r\n\r\n<hr/>\r\n\r\nexport const Template = args => <HomeMaker orient="vert" home="modal_home"><JoinIn {...args} /></HomeMaker>;\r\n\r\n\r\n<Canvas>\r\n <Story name="JoinIn"\r\n   parameters={{\r\n     viewMode: \'docs\'\r\n   }}\r\n   argTypes={{\r\n     host_data:{\r\n       control:{type:"object"},\r\n       table:{category:"data"},\r\n       defaultValue:{user_id:"what"}\r\n     }\r\n   }}\r\n >\r\n   {Template.bind({})}\r\n </Story>\r\n</Canvas>\r\n\r\n<ArgsTable story={"JoinIn"} />\r\n\r\n<br/>\r\n\r\n```\r\n\r\n3. just change the path of the .md file you want to import\r\n4. change the name of the files component variable\r\n5. change the meta title\r\n6. change the description variable to match the component name\r\n\r\n**component instructions**\r\n\r\n7. change component path the the component you want to import\r\n8. change the name of the component variable\r\n9. update the name of the component reference in the meta tag and the Template variable\r\n10. update the meta tags argTypes localize the argTypes to the Canvas component.\r\n\r\n```\r\n   <Canvas>\r\n     <Story name="Note"\r\n       parameters={{\r\n         viewMode: \'docs\'\r\n       }}\r\n        argTypes={{\r\n          host_data:{\r\n            control:{type:"object"},\r\n            table:{category:"data"},\r\n            defaultValue:{user_id:"whatever"}\r\n          }\r\n        }}\r\n     >\r\n     ...\r\n```\r\n\r\n> **GOTCHA:** its better to have all the code close to the edge (without a tab) to keep the javascript from  breaking\r\n'),Object(esm.mdx)("br",null),Object(esm.mdx)(addon_links_react_default.a,{kind:"Storybook/Docs/publish",style:{color:"#1474f3",textDecoration:"none"},mdxType:"LinkTo"},"to publish using LinkTo"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Storybook/Docs/mdx component template",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1124:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"Storybook/Docs/CSF & MDX",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},"# Storybook\r\n\r\n### CSF & MDX   \r\n\r\n<hr/>\r\n<br/>\r\n\r\n#### what is the relationship between .stories.js (csf) and .stories.mdx (mdx)?\r\nComponent Story Format (CSF)\r\n\r\n### Articles:\r\n[storybook docs recipes](https://github.com/storybookjs/storybook/blob/master/addons/docs/docs/recipes.md#csf-stories-with-mdx-docs)   \r\n*_powerful article_*\r\n\r\n[Storybook Docs MDX](https://github.com/storybookjs/storybook/blob/master/addons/docs/docs/mdx.md)   \r\n_this article was a light weight in the \"Documentation-only MDX\" section_\r\n\r\n[Storybook Codemods](https://github.com/storybookjs/storybook/blob/next/lib/codemod/README.md)   \r\n_this readme describes the process of converting between the two formats_\r\n\r\n[storybook controls docs](https://storybook.js.org/docs/react/essentials/controls)   \r\n\r\n  - which one takes priority?\r\n  - which one is not needed?\r\n  - if im using mainly .mdx how much of the .stories.js do i need to add?\r\n\r\n### Using straight markdown (sort of)   \r\n_see: storybook docs recipes above_\r\n\r\n[MDX transclusion](https://mdxjs.com/getting-started#documents)   \r\n\r\n[the gatekeepers hint](https://github.com/storybookjs/storybook/issues/10209)   \r\n\r\n> The current workaround is not awful, but involves more code than neccesary:  ????\r\n\r\n#### adding .md to an mdx file\r\n\r\n```\r\n  import { Description } from '@storybook/addon-docs/blocks';\r\n  import Readme from '.README.md';\r\n\r\n  <Meta title=\"Documentation|Readme\" />\r\n\r\n  <Description>{Readme}</Description>\r\n```\r\n**works**\r\n**GOTCHA: the only difference (miniscule and also major/required) is that all code blocks have to be separated from their headings with an newline**\r\n\r\n#### nameing with a category\r\n\r\n```\r\n  <Meta title=\"Documentation/Readme\" />\r\n```\r\n> use a '/' instead of '|'\r\n\r\n#### naming to create a collapsible folder\r\n\r\n```\r\n  <Meta title=\"Documentation/docs/Readme\" />\r\n```\r\n\r\n> add a third section to the title and storybook creates a collapsible folder for all related materials\r\n\r\n#### markdown only import example\r\n\r\n```\r\n  import { Meta, Description, DocsContainer } from '@storybook/addon-docs/blocks';\r\n  import sb_notes from '../../../react/storybook/storybook notes.md';\r\n\r\n  <Meta title=\"Storybook/Docs/Notes\"\r\n    parameters={{\r\n      docs: {\r\n        container: ({ children, context }) => (\r\n          <DocsContainer context={context}>\r\n              <div className=\"d3-storybook-wrapper\" style={{padding: '0 3rem'}}>{children}</div>\r\n          </DocsContainer>\r\n        ),\r\n      }\r\n    }}\r\n   />\r\n\r\n  <Description>{sb_notes}</Description>\r\n```\r\n> DocsContainer overwrites the docs container\r\n"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Storybook/Docs/CSF & MDX",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1125:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2),addon_links_react=__webpack_require__(46),addon_links_react_default=__webpack_require__.n(addon_links_react);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"Storybook/Docs/mdx template",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},"# mdx template   \r\n## template for using your .md pages in storybook   \r\n_(.md only - without components)_\r\n\r\n1. copy the code below\r\n2. paste it into a [fileName].stories.mdx file\r\n\r\n```\r\n  import { Meta, Description, DocsContainer } from '@storybook/addon-docs/blocks';\r\n  import sb_setup from '../../../react/storybook/storybook setup.md';\r\n\r\n  <Meta title=\"Storybook/Docs/Setup\"\r\n    parameters={{\r\n      docs: {\r\n        container: ({ children, context }) => (\r\n          <DocsContainer context={context}>\r\n              <div className=\"d3-storybook-wrapper\" style={{padding: '0 3rem'}}>{children}</div>\r\n          </DocsContainer>\r\n        ),\r\n      },\r\n    }}\r\n   />\r\n\r\n  <Description>{sb_setup}</Description>\r\n```\r\n\r\n3. just change the path of the filee you want to import\r\n4. change the name of the component variable\r\n5. change the meta title\r\n6. change the description variable to match the component name\r\n"),Object(esm.mdx)("br",null),Object(esm.mdx)(addon_links_react_default.a,{kind:"Storybook/Docs/publish",style:{color:"#1474f3",textDecoration:"none"},mdxType:"LinkTo"},"to publish using LinkTo"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Storybook/Docs/mdx template",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1126:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2),addon_links_react=__webpack_require__(46),addon_links_react_default=__webpack_require__.n(addon_links_react);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"Storybook/Docs/Notes",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},'# Storybook\r\n\r\n### Notes\r\n\r\n<hr/>\r\n\r\n### Articles\r\n[learn Storybook - online books/tutorial articles](https://www.learnstorybook.com/)   \r\n\r\n[Documentation for stakeholders](https://www.learnstorybook.com/design-systems-for-developers/react/en/document/)   \r\n\r\n[CLI options](https://storybook.js.org/docs/react/api/cli-options)   \r\n\r\n\r\n#### Getting started\r\n- navigate to directory and run\r\n\r\n```\r\n  npx create-react-app react-storybook-v6\r\n```\r\n\r\n- navigate into storybook directory\r\n\r\n```\r\n  cd react-storybook-v6\r\n```\r\n\r\n- install and initialize storybook\r\n\r\n```\r\n  npx sb init\r\n```\r\n\r\n#### all init installs\r\n- install dependencies:\r\n\r\n```\r\n  npm i react react-dom sass\r\n```\r\n\r\n- install devDependencies\r\n\r\n```\r\n  npm i -D @storybook/addon-a11y @storybook/addon-console css-loader sass-loader style-loader\r\n```\r\n\r\n#### creating stories\r\n_Button.stories.js_\r\n\r\n```\r\n  import React from \'react\';\r\n  import Button from \'./Button\';\r\n\r\n  export default {\r\n    title: \'Button\',/*mandatory and should be unique throughout entire project*/\r\n    component: Button\r\n  }\r\n\r\n  export const Primary = () => <Button variant="primary">Primary</Button>\r\n```\r\n**requires at least one named export**\r\n\r\n```\r\n  const Comp = {\r\n    title: \'Button\',\r\n    component: Button\r\n  }\r\n\r\n  export default Comp;\r\n```\r\n**better syntax avoids no-anonymous defaults warning**\r\n\r\n#### specify the named exports\r\n> every named export represents a \'story\'\r\n> a menu item is created for each of the named exports\r\n> a named export is basically a react component\r\n\r\n> without at least one of these exports the story is completely empty - there isn\'t even a button section in the docs   \r\n\r\nButton.stories.js\r\n\r\n```\r\n  export const Primary = () => <Button variant="primary">Primary</Button>\r\n  export const Secondary = () => <Button variant="secondary">Secondary</Button>\r\n  export const Success = () => <Button variant="success">Success</Button>\r\n  export const Danger = () => <Button variant="danger">Danger</Button>\r\n```\r\n\r\n#### group stories (4.1)\r\n> can be \'Form/componentName\' or \'form/componentName\'. can also be \'group/subGroup/componentName\'   \r\n\r\nButton.stories.js\r\n\r\n```\r\n  // i can group stories\r\n\r\n  export default {\r\n    title: \'form/Button\',\r\n    component: Button\r\n  }\r\n```\r\n\r\n\r\n#### Renaming stories (4.2)\r\nButton.stories.js\r\n\r\n```\r\n  ...\r\n  export const Primary = () => <Button variant="primary">Primary</Button>\r\n\r\n  Primary.storyName = "Primary Button";// renaming stories\r\n```\r\n\r\nthe renaming convention:\r\n\r\n```\r\n  Primary.storyName = "Primary Button";// renaming stories\r\n\r\n  // the formula\r\n  // namedExport.storyName = "new name string"\r\n```\r\n\r\n#### [to alphabetize the stories](https://storybook.js.org/docs/react/writing-stories/naming-components-and-hierarchy)   \r\ngot to the docs and find section:\r\n\r\n**Sorting stories**\r\n>By default, stories are sorted in the order in which they were imported. This can be overridden by adding storySort to the options parameters in your preview.js file.\r\n\r\n>The most powerful method of sorting is to provide a function to storySort. Any custom sorting can be achieved with this method.\r\n\r\n```\r\n// .storybook/preview.js\r\n\r\nexport const parameters = {\r\n  options: {\r\n    storySort: (a, b) =>\r\n      a[1].kind === b[1].kind ? 0 : a[1].id.localeCompare(b[1].id, undefined, { numeric: true }),\r\n  },\r\n};\r\n```\r\n\r\ncopy options portion:\r\n\r\n```\r\n  options: {\r\n    storySort: (a, b) =>\r\n      a[1].kind === b[1].kind ? 0 : a[1].id.localeCompare(b[1].id, undefined, { numeric: true }),\r\n  },\r\n```\r\n\r\npaste after the actions property in\r\n.storybook/preview.js\r\n\r\n```\r\n  export const parameters = {\r\n    actions: { argTypesRegex: "^on[A-Z].*" },\r\n    options: {\r\n      storySort: (a, b) =>\r\n        a[1].kind === b[1].kind ? 0 : a[1].id.localeCompare(b[1].id, undefined, { numeric: true }),\r\n    },\r\n  }\r\n```\r\n\r\n#### story within a story (4.3)\r\n/Subscription/Subscription.stories.js\r\n\r\n```\r\n  // a story of stories\r\n  import React from \'react\';\r\n\r\n  // don\'t import the components, import the stories we have written for the components\r\n  import {Primary} from \'../components/Button/Button.stories\';\r\n  import {Large} from \'../components/Input/Input.stories\';\r\n\r\n  const Story = {\r\n    title: \'form/Subscription\',\r\n  }\r\n\r\n  export default Story;\r\n\r\n  // named export\r\n  export const PrimarySubscription = () => (\r\n    <>\r\n      <Large />\r\n      <Primary />\r\n    </>\r\n  )\r\n```\r\n\r\n#### Args mechanism (4.4)\r\n\r\nButton.stories.js\r\n\r\n```\r\n  // args mechanism\r\n  const Template = args => <Button {...args} />\r\n\r\n  // export 1 or more stories using this Template\r\n\r\n  // create a story using the primary variant of the button\r\n  export const PrimaryA = Template.bind({});\r\n  PrimaryA.args = {\r\n    variant:"primary",\r\n    children:"Primary Args"\r\n  }\r\n\r\n          // you can import args fromo another template\r\n          export const LongPrimaryA = Template.bind({});\r\n          LongPrimaryA.args = {\r\n            ...PrimaryA.args,\r\n            children: "Long Primary Args"\r\n          }\r\n\r\n  export const SecondaryA = Template.bind({});\r\n  SecondaryA.args = {\r\n    variant: "secondary",\r\n    children: "Secondary Args"\r\n  }\r\n```\r\n\r\nyou can also specify args at the component level (default export level)\r\nButton.stories.js\r\n\r\n```\r\n    const Story = {\r\n      title: \'form/Button\',/*mandatory and should be unique throughout entire project*/\r\n      component: Button,\r\n      decorators: [story => <Center>{story()}</Center>],\r\n      args: {\r\n        children: "Button"\r\n      }\r\n    }\r\n\r\n    export default Story;\r\n\r\n    export const PrimaryA = Template.bind({});\r\n    PrimaryA.args = {\r\n      variant:"primary",\r\n      // children:"Primary Args"// comment out children prop or remove\r\n    }\r\n\r\n              // you can import args fromo another template\r\n              export const LongPrimaryA = Template.bind({});\r\n              LongPrimaryA.args = {\r\n                ...PrimaryA.args\r\n              }\r\n\r\n    export const SecondaryA = Template.bind({});\r\n    SecondaryA.args = {\r\n      variant: "secondary",\r\n      children: "Secondary Args"\r\n    }\r\n```\r\n**all Templates will have the same children arg unless there is a local declaration of that arg (has \'specificity\')**   \r\n\r\n> the args at the story lvl will overwrite args at the component level\r\n\r\n#### adding decorators (5.0)\r\n> you want to add components that help decorate the display. but you want to keep the code DRY\r\n\r\n```\r\n  export const Primary = () => <Center><Button variant="primary">Primary</Button></Center>\r\n  export const Secondary = () => <Center><Button variant="secondary">Secondary</Button></Center>\r\n  export const Success = (  ) => <Center><Button variant="success">Success</Button></Center>\r\n  export const Danger = () => <Center><Button variant="danger">Danger</Button></Center>\r\n```\r\n*_not like this_*\r\n\r\nuse a decorator\r\n\r\n```\r\n  export default {\r\n    title: \'form/Button\',/*mandatory and should be unique throughout entire project*/\r\n    component: Button,\r\n    decorators: [story => <Center>{story()}</Center>]\r\n  }\r\n\r\n  prevents having to do this\r\n```\r\n**decorators use a hoc style script to wrap all your components in a component**\r\n\r\n#### adding global decorators\r\n\r\n.storybook/preview.js\r\n\r\n```\r\n  import React from \'react\';\r\n  import {addDecorator} from \'@storybook/react\';\r\n  import Center from \'../src/components/Center\';\r\n\r\n  addDecorator(story => <Center>{story()}</Center>);\r\n\r\n  export const parameters = {\r\n  ...\r\n\r\n```\r\n\r\nalternative decorator (v6)\r\n\r\n```\r\n  // addDecorator(story => <Center>{story()}</Center>);// pre-themed\r\n\r\n  // v6 lets me use multiple decorators in an array of decorators - the theme is still not working\r\n  export const decorators = [\r\n    story => <ChakraProvider>{story()}</ChakraProvider>,\r\n    story => <Center>{story()}</Center>\r\n  ]\r\n```\r\n\r\n#### Theming (6.1 & 6.2) **failed**\r\n[Chakra theming library](chakra-ui.com)   \r\n\r\n[install chakra](https://chakra-ui.com/docs/getting-started)   \r\ncopy paste code snippet\r\n\r\n```\r\n  npm i @chakra-ui/react @emotion/react @emotion/styled framer-motion\r\n```\r\n\r\n#### [adding prop documentation controls (knob controls)](https://storybook.js.org/docs/react/essentials/controls)   \r\n\r\n_used for .mdx variants_\r\n\r\n> note: argTypes can be added to the Meta element or the Story Element - if added to the Meta element it is used globally\r\nfor all instances of the component unless otherwise defined in Story (overrides Meta definitions)   \r\n\r\n```\r\n  <Meta title="Access/Join in"\r\n    component={JoinIn}\r\n    argTypes={{\r\n      host_data:{\r\n        control:{type:"object"},\r\n        defaultValue:{user_id:"what"}\r\n      }\r\n    }}\r\n  />\r\n\r\n  // and/or\r\n\r\n  <Story name="JoinIn"\r\n  argTypes={{\r\n    host_data:{\r\n      control:{type:"object"},\r\n      defaultValue:{user_id:"what"}\r\n    }\r\n  }}\r\n    parameters={{\r\n      viewMode: \'docs\'\r\n    }}\r\n  >\r\n```\r\n\r\n#### addons (7.1)\r\n[storybook addons](https://github.com/storybookjs/storybook/tree/master/addons)   \r\n[Supercharge Storybook](https://storybook.js.org/addons)   \r\n - controls add on lets you dynamically change props for components (args)\r\n  **works with template and args**\r\n\r\n```\r\n  SecondaryA.args = {\r\n    variant: "secondary",\r\n    children: "Secondary Args"\r\n  }\r\n```\r\n\r\nwhen this was still being bugfixed you may have needed to add argTypes to the Story default component\r\n> the work around\r\n\r\n```\r\n  export default {\r\n    title: \'form/Button\',/*mandatory and should be unique throughout entire project*/\r\n    component: Button,\r\n    decorators: [story => <Center>{story()}</Center>],\r\n    argTypes:{\r\n      variantColor:{\r\n        control:"text"\r\n      }\r\n    }\r\n  }\r\n\r\n  // specifically adding this\r\n  argTypes:{\r\n    variantColor:{\r\n      control:"text"\r\n    }\r\n  }\r\n```\r\n\r\n#### actions\r\nadding an onclick action\r\n\r\n```\r\n    const Comp = {\r\n      title: \'form/Button\',/*mandatory and should be unique throughout entire project*/\r\n      component: Button,\r\n      /* decorators: [story => <Center>{story()}</Center>],*/\r\n      args: {\r\n        children: "Button"\r\n      },\r\n      argTypes:{\r\n        onClick:{action: "clicked"}\r\n      }// works\r\n    }\r\n```\r\n**seems to only work in the default export component ()\r\n\r\nadding actions without argTypes\r\n\r\n```\r\n  export const Primary = () => <Button onClick={action("Click handler")} variant="primary">Primary</Button>\r\n```\r\n\r\nadding to args templates without argTypes\r\n\r\n```\r\n    export const SecondaryA = Template.bind({});\r\n    SecondaryA.args = {\r\n      variant: "secondary",\r\n      children: "Secondary Args",\r\n      //onClick:{action: "clicked"}// fails - becomes an arg which can be modified by controls\r\n      // onClick:{action: function(){action("secondary click")}}//failed\r\n      // onClick:()=>{action("secondary click")}//failed\r\n      onClick:action("secondary click")// somehow this works\r\n    }\r\n```\r\n\r\ncapture multiple events - use actions export on the addon\r\n\r\n```\r\n  export const Success = () => <Button {...actions("onClick","onMouseOver")} variant="success">Success</Button>\r\n```\r\n**spread operator actions - displays events as eventName**\r\n\r\n#### Logs\r\n> adds console logs to actions tab\r\n\r\n```\r\n  export const Danger = () => <Button onClick={() => {console.log("danger clicked");}} variant="danger">Danger</Button>\r\n```\r\n**this is a natural fn of react - not storybook**\r\n\r\nlog in storybook w/o using the devtools log\r\n\r\ninstall the plugin\r\n\r\n```\r\n  npm i -d @storybook/addon-console\r\n\r\n```\r\n\r\nthen add it to the story\r\n\r\n```\r\n  // with no objects extracted\r\n  import "@storybook/addon-console";\r\n```\r\n**once this is done the same console.log that is set above on the Danger button will now appear in the actions panel**\r\n\r\nto add an enhancement printing the story information where the log statement is from\r\n(done in/with decorators)\r\n\r\n.storybook/preview.js\r\n\r\n```\r\n  // this time with object extraction\r\n  import {withConsole} "@storybook/addon-console";\r\n\r\n  ...\r\n\r\n  export const decorators = [\r\n    story => <ChakraProvider>{story()}</ChakraProvider>,\r\n    story => <Center>{story()}</Center>,\r\n\r\n\r\n    (story, context) => withConsole()(story)(context)\r\n\r\n\r\n  ]\r\n```\r\n// returns: form/Button/Danger: (1) ["danger clicked"]\r\n\r\n#### the docs addon **(docs is already added by default in v6)**\r\n[writing docs introduction](https://storybook.js.org/docs/react/writing-docs/introduction)   \r\n[storybook docspage](https://github.com/storybookjs/storybook/blob/master/addons/docs/docs/docspage.md)   \r\n[writing docs docspage](https://storybook.js.org/docs/react/writing-docs/docs-page)   \r\n[storybook docs recipes](https://github.com/storybookjs/storybook/blob/master/addons/docs/docs/recipes.md#csf-stories-with-mdx-docs)   \r\n**see li: 686 mdx format**\r\ninstall it\r\n\r\n```\r\n  npm i -d @storybook/addon-docs\r\n```\r\nthen add it to the .storybook/main.js addons - deprecated\r\n**its a pretty large plugin**\r\n\r\n\r\n### the knobs addon (controls in v6)\r\ngoogle search: storybook knobs vs controls\r\n[Storybook Controls - Live edit UI components with no code](https://medium.com/storybookjs/storybook-controls-ce82af93e430)   \r\narticle sample\r\n\r\n```\r\n  import { Button } from \'@storybook/react/demo\';\r\n\r\n  export default {\r\n    title: \'Button/Controls\',\r\n    component: Button\r\n  };\r\n\r\n  export const Basic = (args) => <Button {...args} />;// looks like Template setup\r\n  Basic.args = { children: \'hello\' };// also same as Template the without the .bind({}) step\r\n```\r\n\r\nmy sample\r\n\r\n```\r\n  export const knobsTest = args => <Button {...args} />// looks the same as the rest of the story setups only with a parameter\r\n  knobsTest.args = {\r\n    variant:"primary"\r\n  }\r\n```\r\n**works**\r\n\r\n// how do i use other forms of inputs in controls?\r\n[storybook docs - controls: choosing control types](https://storybook.js.org/docs/react/essentials/controls)   \r\n[storybook removing controls](https://storybook.js.org/docs/react/essentials/controls)   \r\n\r\n```\r\n  <Meta title="Access/Join in"\r\n    component={JoinIn}\r\n    argTypes={{\r\n      ...\r\n      dev:{\r\n        table:{disable:true},\r\n        defaultValue: true\r\n      }\r\n    }}\r\n    ...\r\n```\r\n**works**\r\n\r\nother variations   \r\n\r\n```\r\n  argTypes={{\r\n    host_data:{\r\n      control:{type:"object"},\r\n      table:{category:"data"},\r\n      defaultValue:{user_id:"what"}\r\n    },\r\n    dev:{\r\n      // table:{disable:true},\r\n      control:{type:"boolean"},\r\n      //control: false,\r\n      //defaultValue: true\r\n    }\r\n  }}\r\n  args={{dev:true}}\r\n\r\n\r\n  // works to remove entire prop documentation from the table\r\n  table:{disable:true},\r\n\r\n  works to remove only the knob control from the prop documentation table\r\n  //table:{disable:true},\r\n  control: false,\r\n```\r\n\r\n\r\n#### A11y accessibility addon\r\ninstallation\r\n\r\n```\r\n  npm i -d @storybook/addon-a11y\r\n```\r\n\r\nthen add to addons in main.js\r\n\r\n```\r\n  module.exports = {\r\n    "stories": [\r\n      "../src/**/*.stories.mdx",\r\n      "../src/**/*.stories.@(js|jsx|ts|tsx)"\r\n    ],\r\n    "addons": [\r\n      "@storybook/addon-links",\r\n      "@storybook/addon-essentials",\r\n      "@storybook/preset-create-react-app",\r\n\r\n\r\n      "@storybook/addon-a11y"\r\n\r\n\r\n    ]\r\n  }\r\n```\r\n**for once this was necessary (required)**\r\n\r\nadd to decorators\r\n\r\n```\r\n  import {withA11y} from \'@storybook/addon-a11y\'\r\n\r\n  export const decorators = [\r\n    story => <ChakraProvider>{story()}</ChakraProvider>,\r\n    story => <Center>{story()}</Center>,\r\n    (story, context) => withConsole()(story)(context),\r\n\r\n\r\n    (story) => withA11y(story)\r\n\r\n  ]\r\n```\r\n**works**\r\n\r\n#### storysource - source code addon\r\n\r\n```\r\n  npm i -D @storybook/addon-storysource\r\n```\r\n\r\n```\r\n  "addons": [\r\n    ...\r\n    "@storybook/addon-storysource"\r\n    }// storysource addon\r\n  ...\r\n\r\n    // or\r\n\r\n  "addons": [\r\n    "@storybook/addon-links",\r\n    "@storybook/addon-essentials",\r\n    "@storybook/preset-create-react-app",\r\n\r\n    {\r\n      name: \'@storybook/addon-storysource\',\r\n      options: {\r\n        rule: {\r\n          // test: [/\\.stories\\.jsx?$/], This is default\r\n          include: [path.resolve(__dirname, \'../src\')], // You can specify directories\r\n        },\r\n        loaderOptions: {\r\n          prettierConfig: { printWidth: 80, singleQuote: false },\r\n          injectStoryParameters: false\r\n        },\r\n      },\r\n    }// storysource addon\r\n  ...\r\n\r\n```\r\n\r\n**GOTCHA: storysource not showing source code**\r\n[@storybook/addon-storysource v6.1.10 | docs](https://npm.io/package/@storybook/addon-storysource)   \r\n\r\n**Displaying full source**\r\n> Storybook 6.0 introduced an unintentional change to source-loader, in which only the source of the selected story is shown in the addon. To restore the old behavior, pass theinjectStoryParameters: false option.\r\n\r\n```\r\n  module.exports = {\r\n  addons: [\r\n    {\r\n      name: \'@storybook/addon-storysource\',\r\n      options: {\r\n        loaderOptions: {\r\n          injectStoryParameters: false,\r\n        },\r\n      },\r\n    },\r\n  ],\r\n};\r\n```\r\n\r\n#### [Writing Docs MDX](https://storybook.js.org/docs/react/writing-docs/mdx)   \r\n[Storybook Docs Recipes](https://github.com/storybookjs/storybook/blob/master/addons/docs/docs/recipes.md#csf-stories-with-mdx-docs)   \r\n**see li: 686 mdx format**\r\n\r\n\r\n### Essentials are zero config\r\n[Storybook essentials introduction](https://storybook.js.org/docs/react/essentials/introduction)   \r\n\r\n>Configuration\r\nEssentials is "zero config”, it comes with a recommended configuration out of the box.\r\n\r\n>If you need to reconfigure any of the essential addons, install it manually, following the installation instructions and adjust the configuration to your needs.\r\n\r\n>When you start Storybook, Essentials will override its configuration with your own.\r\n\r\n\r\n#### Storybook does recognize jsDoc "style" comments\r\n**but not as jsDoc comments - it only creates a regular comment**\r\n\r\n#### default ArgsTable\r\n\r\n```\r\n  const Button = ({variant = "primary", children, ...rest}) => {\r\n    // const {variant = "primary", children, ...rest} = props;\r\n    return (\r\n      <button className={`button ${variant}`} {...rest}>\r\n        {children}\r\n      </button>\r\n    )\r\n  }\r\n```\r\n> if props is deconstructed to display its specific arguments (not children or spread into ...rest)\r\nstorybook will display the various props ("arguments") in a table on the docs page.\r\n\r\n- to get more detailed tables use prop-types in the stories\r\n\r\n#### PropTypes also work right out the box (no npm install)\r\n\r\n```\r\n  import PropTypes from \'prop-types\';\r\n\r\n  const Button = ({variant = "primary", isDisabled = false, children, ...rest}) => {\r\n    ...\r\n  }\r\n\r\n  Button.propTypes = {\r\n    /**\r\n     Checks if the button should be disabled\r\n    */\r\n    isDisabled: PropTypes.bool.isRequired,\r\n    /**\r\n    The display content of the button\r\n    */\r\n    content: PropTypes.string.isRequired,\r\n  };\r\n\r\n  export default Button;\r\n```\r\n> variant is still included in the ArgsTable along with the more descriptive propTypes ()\r\n> defaults must be added natrually to the prop desctructuring to work\r\n> if you add a default the property looses its "isRequired" proptype even if you set it explicitly\r\n\r\n**GOTCHA: ComponentName.propTypes script has to be above the export not below (error)**\r\n\r\n#### [ArgsTable](https://storybook.js.org/docs/react/writing-docs/doc-blocks#argstable)   \r\n[Customizing the ArgsTable](https://storybook.js.org/docs/react/writing-docs/doc-blocks#customizing)   \r\n\r\n```\r\n  const Comp = {\r\n    title: \'form/Button\',/*mandatory and should be unique throughout entire project*/\r\n    component: Button,\r\n    /* decorators: [story => <Center>{story()}</Center>],*/\r\n    args: {\r\n      children: "Button"\r\n    },\r\n    argTypes:{\r\n      variant: {\r\n        description: \'overwritten description\',\r\n        table: {\r\n          type: {\r\n              summary: \'something short\',\r\n              detail: \'something really really long\'\r\n          },\r\n        }\r\n      },\r\n      onClick:{action: "clicked"}\r\n    }// works\r\n  }\r\n```\r\n**failed on docs - maybe it needs a working .mdx file - shows in Canvas > Controls**\r\n\r\n#### ArgsTable of= vs story=\r\n\r\n```\r\n// variant with additional details - used only in story= (not of=)\r\n  argTypes:{\r\n    variant: {\r\n      description: \'overwritten description\',\r\n      table: {\r\n        type: {\r\n            summary: \'something short\',\r\n            detail: \'something really really long\'\r\n        },\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  <ArgsTable of={DivTag} />\r\n  <ArgsTable story={"Secondary"} />\r\n```\r\nof is more generic - it doesn\'t give you control nor does it show additional any details\r\n\r\n#### ArgsTable using categories\r\n\r\n```\r\n  <Canvas>\r\n  <Story name="Template"\r\n    args={{children:"DivTag"}}\r\n    argTypes={{\r\n      data:{\r\n        table:{category:"data"}\r\n      },\r\n      variant: {\r\n        table: {category:"css class"}\r\n      }\r\n    }}\r\n  >\r\n    {Template.bind({})}\r\n  </Story>\r\n```\r\n**now i need to find out how to make them start collapsed**\r\n\r\nuse argTypes to set defaultValue\r\n\r\n```\r\n  <Meta\r\n    title="form/Button"\r\n    component={Button}\r\n    argTypes={{\r\n      variant: {defaultValut:"primary"}\r\n    }}\r\n    args={{dev:true}}\r\n  />\r\n\r\n  <Story name="Template"\r\n    args={{children:"DivTag"}}\r\n    argTypes={{\r\n      data:{control:{type:"object"}},\r\n      content:{defaultValue:"some value"}\r\n    }}\r\n    args={{dev:true}}\r\n  >\r\n    {Template.bind({})}\r\n  </Story>\r\n\r\n\r\n  //you can use either:\r\n\r\n  defaultValue: true\r\n\r\n  //or\r\n\r\n  args={{dev:true}}\r\n\r\n  // both work\r\n```\r\n\r\n#### [Adding an .mdx file (mdx format)](https://storybook.js.org/docs/react/api/mdx)   \r\n**basic example works**   \r\n\r\n```\r\n  \x3c!--- MyComponent.stories.mdx --\x3e\r\n  import { Meta, Story, Canvas, Description, ArgsTable } from \'@storybook/addon-docs/blocks\';\r\n  import Button from \'./Button\'\r\n\r\n  <Meta\r\n    title="form/Button"\r\n    component={Button}\r\n    argTypes={{\r\n      variant: "primary"\r\n    }}\r\n  />\r\n\r\n  <ArgsTable of={Button} />\r\n\r\n  <Story name="Mdxer2">\r\n    <Button variant="secondary">Secondary</Button>\r\n  </Story>\r\n```\r\n**this basic .mdx file works and given the same name as the stories.js file will overwrite it. otherwise its in addition to it**\r\n\r\n**GOTCHA: argTypes property in Meta is doing nothing**\r\n\r\n```\r\n  <Description markdown={"\r\n    ## Custom description\r\n\r\n    Insert fancy markdown here.\r\n  "}/>\r\n```\r\nall variations of using markdown in Description failed\r\n\r\n\r\nGOTCHA: when setting up the mdx file be sure to write the first imports without a leading space/tab\r\n\r\n```\r\nimport ... // correct\r\n\r\n...\r\n\r\n import ... // may error\r\n```\r\n\r\n#### [Adding controls to mdx](https://storybook.js.org/docs/react/essentials/controls)   \r\n\r\n```\r\n  import { Meta, Story, Canvas, Description, ArgsTable } from \'@storybook/addon-docs/blocks\';\r\n  import Button from \'./Button\'\r\n\r\n  export const Template = args => <Button {...args} />\r\n\r\n  <Meta\r\n    title="MDX"\r\n    component={Button}\r\n    argTypes={{\r\n      children: {control:"text"},\r\n      variant: {control: "text"}\r\n      data:{control:"object"},\r\n      content:{control:"none"}\r\n    }}\r\n  />\r\n\r\n  ## Adding controls to mdx\r\n  <Story name="Template"\r\n    args={{children:"button"}}\r\n  >\r\n    {Template.bind({})}\r\n  </Story>\r\n```\r\n**setting the meta specifies what type of control input to give the user**\r\n**defaults can be added in individual story\'s args prop if defaults are not given in the component itself**\r\n**i can add control:"none" to get rid of controls i don\'t want to update\r\n\r\ncan also be added directly to the story to avoid adding to stories that aren\'t editable\r\n\r\n```\r\n  <Story name="Template"\r\n    args={{children:"DivTag"}}\r\n    argTypes={{\r\n      data:{control:{type:"object"}}\r\n    }}\r\n  >\r\n    {Template.bind({})}\r\n  </Story>\r\n```\r\n**GOTCHA: objects must be in full (perfect) json format - no shortcuts e.x: {"style":{"border":"5px solid red"}}**\r\n\r\n```\r\n  {"style":{"border":"5px solid red","backgroundColor":"black","color":"gold"}}\r\n```\r\n\r\n#### [Controlling the show code section using parameters](https://storybook.js.org/docs/react/writing-docs/doc-blocks#docspage-1)   \r\n\r\n```\r\n  ## Adding controls to mdx\r\n  // variant with code string\r\n  <Canvas>\r\n  <Story name="Template"\r\n    args={{children:"DivTag"}}\r\n    argTypes={{\r\n      data:{control:{type:"object"}},\r\n    }}\r\n    parameters={{docs: {\r\n      source: {code:"show this code"}\r\n    }}}\r\n  >\r\n    {Template.bind({})}\r\n  </Story>\r\n  </Canvas>\r\n\r\n  // variant with type\r\n  <Canvas>\r\n    <Story name="Secondary"\r\n      parameters={{docs: {\r\n        source: {type: "code"}\r\n      }}}\r\n    >\r\n      <DivTag variant="secondary">Secondary</DivTag>\r\n    </Story>\r\n  </Canvas>\r\n```\r\n**not extremely useful unless i wanted to add an example and have it appear with the component**\r\n\r\nstill haven\'t come across how to make the actual component code visible\r\n> (idk if i need it but i like to be able to if possible)\r\n\r\n#### [adding script tags, links and custom html](https://storybook.js.org/docs/react/configure/story-rendering#adding-to-head)   \r\n- .storybook/preview-head.html\r\n**adding to the head element**\r\n\r\n```\r\n  \x3c!-- .storybook/preview-head.html --\x3e\r\n\r\n  \x3c!-- Pull in static files served from your Static director or the internet --\x3e\r\n  <link rel=”preload” href=”your/font” />\r\n  \x3c!-- Or you can load custom head-tag JavaScript: --\x3e\r\n  <script src="https://use.typekit.net/xxxyyy.js"><\/script>\r\n  <script>try{ Typekit.load(); } catch(e){ }<\/script>\r\n```\r\n\r\n**adding to the body element**\r\n.storybook/preview-body.html\r\n\r\n```\r\n  \x3c!--  .storybook/preview-body.html --\x3e\r\n\r\n  <div id="custom-root"></div>\r\n```\r\n\r\n#### adding scss files\r\n  - i can\'t use style elements to add scss files but i can directly require scss files from anywhere in my dir hierarchy\r\n  - i want to set up a css folder with a style.scss file that i can use to add global styles to any .stories\r\n\r\n\r\n#### building helper components\r\n- it may help me display my components by building helper components that i can use to help trigger the target component\r\n\r\n\r\nto get the prop descriptions to show\r\n\r\n```\r\n  npm install -D babel-plugin-react-docgen\r\n```\r\n**failed - also needs to use a .babelrc file?**\r\n\r\nmain.js\r\n\r\n```\r\n  argTypes={{\r\n    message:{\r\n      control:{type:"text"},\r\n      description:"toast user message",\r\n      table: {type: {summary: \'text\', detail: \'something really really long\'}}\r\n    },\r\n    ...\r\n```\r\n\r\nto add better src code - use parameters prop in Story\r\n\r\n```\r\n  <Canvas>\r\n    <Story name="toast"\r\n      parameters={{docs: {\r\n        source: {code:"toaster({home, name, message, auto, sec}) \\n <Toast {...{name, message, auto, sec}} ></Toast>"}\r\n      }}}\r\n    >\r\n      {Template.bind({})}\r\n    </Story>\r\n  </Canvas>\r\n```\r\n\r\n#### [Hide NoControls warning](https://storybook.js.org/docs/react/essentials/controls#hide-nocontrols-warning)   \r\n>If you don\'t plan to handle the control args inside your Story, you can remove the warning with:\r\n\r\n```\r\n  // Button.stories.js\r\n\r\n  export const Large = Template.bind({});\r\n\r\n  Large.parameters = {\r\n  controls: { hideNoControlsWarning: true },\r\n  };\r\n```\r\n\r\n#### [Controlling a story\'s view mode](https://github.com/storybookjs/storybook/blob/master/addons/docs/docs/recipes.md#controlling-a-storys-view-mode)   \r\n- previewTabs property - can put docs tab before canvas tab\r\n- viewMode property - can determine which tab is always displayed when navigating back to a story\r\n\r\n```\r\n  <Canvas>\r\n    <Story name="Toast"\r\n      parameters={{docs: {\r\n        source: {code:`//triggered by an onClick event\r\n        const {toaster} = require(\'../../../xfiles/js/lib/elements/toaster/toaster\');\r\n        toaster({home, name, message, auto, sec});`}\r\n      },\r\n      viewMode: \'docs\',\r\n      previewTabs: { \'storybook/docs/panel\': { index: -1 } }\r\n      }}\r\n    >\r\n      {Template.bind({})}\r\n    </Story>\r\n  </Canvas>\r\n```\r\n\r\n\r\n#### [Publish Storybook](https://storybook.js.org/docs/react/workflows/publish-storybook)   \r\n[storybook deployer](https://github.com/storybookjs/storybook-deployer)   \r\n[Review with your team](https://storybook.js.org/docs/react/workflows/publish-storybook#review-with-your-team)\r\n> If you publish your Storybook to Chromatic, you can use the UI Review feature to automatically scan your PRs for new and updated stories. That makes it easy to identify what changed and give feedback.\r\n\r\n[what is chromatic](https://www.chromatic.com/features/publish)   \r\n\r\npublish storybook to github pages so it can exists in your repo\r\n\r\n[storybook codemods](https://github.com/storybookjs/storybook/blob/next/lib/codemod/README.md)   \r\n\r\n#### [theming](https://storybook.js.org/docs/react/configure/theming)   \r\n\r\n#### [linking to other stories](https://www.npmjs.com/package/@storybook/addon-links)   \r\n[the "kind=" hint | has console error](https://github.com/storybookjs/storybook/issues/10846)   \r\n\r\n```\r\n[workflows](./?path=/story/boilerplate-build-workflows-build-workflows--page)\r\n```\r\n> this works but you have copy the link from already compiled storybook pages or guess what the link\r\nwould be based on the stories title\r\n\r\n\r\n```\r\n  import LinkTo from \'@storybook/addon-links/react\'\r\n\r\n  ...\r\n\r\n  <LinkTo kind="boilerplate/build_workflows/build workflows">link to build</LinkTo>// works\r\n\r\n  <LinkTo story="boilerplate/build_workflows/build workflows">link to build</LinkTo>// fails\r\n```\r\n> this works - notice that using **story=** fails but using **kind=** succeeds. if you use story the url\r\nwill be something with an iframe.html and an amalgamation of both the page you are on and the page you want\r\n> i.e. http://localhost:6006/?path=/story/boilerplate-build-workflows-react-cdn-storybook--boilerplate-build-workflows-build-workflows\r\n> you may or may not get the iframe issue, which isn\'t the point. the point is use **"kind="**\r\n\r\n#### more on LinkTo   \r\n\r\n>It accepts all the props the a element does, plus story and kind. It the kind prop is omitted, the current kind will be preserved.\r\n\r\n```\r\n  <LinkTo\r\n    kind="Toggle"\r\n    story="off"\r\n    target="_blank"\r\n    title="link to second story"\r\n    style={{textDecoration: \'none\'}}\r\n  >Go to Second</LinkTo>\r\n```\r\n#### updating icomoon   \r\n**GOTCHA:** it can\'t parse style.scss in icomoon because of the @font-face declaration\r\n\r\n- to update replace "/core/" with "../" in icomoon/style2.css\r\n\r\n> icomoon reference is added to Center.js which is a decorator added to all component displays\r\n\r\n_Center.js_\r\n\r\n```\r\n  import React from \'react\'\r\n  import \'./Center.css\';\r\n  require(\'../../css/style.scss\');\r\n  require(\'../../../../icomoon/style2.css\');// special storybook style\r\n\r\n  const Center = (props) => {\r\n    return (\r\n      <div className="center storybook-center">\r\n        {props.children}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Center;\r\n```\r\n'),Object(esm.mdx)("p",null,Object(esm.mdx)("a",_extends({parentName:"p"},{href:"./?path=/story/Storybook-Docs-publish--page"}),"to publish using .md")),Object(esm.mdx)(addon_links_react_default.a,{kind:"Storybook/Docs/publish",style:{color:"#1474f3",textDecoration:"none"},mdxType:"LinkTo"},"to publish using LinkTo"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Storybook/Docs/Notes",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1127:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"Storybook/Docs/publish",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},'# Storybook\r\n\r\n### Publish\r\n\r\n<hr/>\r\n\r\n### Articles\r\n\r\n[Document for stakeholders](https://www.learnstorybook.com/design-systems-for-developers/react/en/document/)   \r\n\r\n[Publish Storybook - publish online](https://storybook.js.org/docs/react/workflows/publish-storybook#publish-storybook-online)   \r\n\r\n[storybookjs/storybook-deployer](https://github.com/storybookjs/storybook-deployer)   \r\n\r\n[github pages](https://pages.github.com/)   \r\n\r\n[Deploy Storybook to GitHub Pages](https://dev.to/kouts/deploy-storybook-to-github-pages-3bij)   \r\n\r\n[CLI options](https://storybook.js.org/docs/react/api/cli-options)   \r\n\r\n> nope they ran me through a loop with adding github actions - i need a vanilla deployment and update\r\nthey almost seemed like the vanilla node way to do this.\r\n\r\n_? what is netlify?_\r\n\r\n[How to deploy Storybook to GitHub Pages](https://arminydy.medium.com/how-to-deploy-storybook-to-github-pages-4894097d49ab)   \r\n\r\n*-deploy using gh-pages-*\r\n\r\n> i think **this is the one**   \r\n> still a bit of magic, seemingly less magic, but magic all the same.   \r\n> i may eventually use this once i can ( do it the long way / understand it the long way )\r\n> it looks like this one doens\'t need its own repo. i can have a storybook separate from a repo and push to a "pages" branch\r\n\r\n[gh-pages cli package | npmjs.com](https://www.npmjs.com/package/gh-pages)   \r\n\r\n## Github pages\r\n\r\n#### github pages test 1\r\n\r\nHere i want an introduction to pages. w/o a template\r\n\r\ni want to:\r\n\r\n- make a new repo   \r\n- turn on github pages   \r\n- explore the default repository   \r\n  - did it create a separate branch for gh pages?   \r\n    _yes it auto created **"gh-pages"** branch_   \r\n  - is it running off a readme or did it create a separate index.html?   \r\n    _its running off a readme **"index.md"**_   \r\n  - ~~what happens if i change the index.html file directly?~~   \r\n  _there is no .html file._    \r\n\r\n#### examining the new gh-pages branch   \r\n\r\nIn the traditional way of using a repo and its branches i wanted to check the gh-pages branch in my new local repository.  but because the new branch is created after you clone the repo locally and then because github pages not only creates the new repo automatically but also forces you to do a 1st commit also remotely there were some challenges getting the local repo to match the new remote gh-pages branch.\r\n\r\n[get the remote branches](https://stackoverflow.com/questions/9537392/git-fetch-remote-branch)   \r\n\r\nto get a remote branch you have to create a local copy of the branch you want from the remote, then use it to track the remote branch\r\n\r\n> do use this method   \r\n\r\n```\r\n  git checkout --track origin/gh-pages\r\n```\r\n\r\n\r\n> this creates tracks and checks out the gh-pages remote branch\r\n\r\n[get all the remote branches](https://stackoverflow.com/questions/10312521/how-to-fetch-all-git-branches)   \r\n\r\n> still a variation of the manual method above - just using a shell script to automate the process (uses a loop)   \r\n> **note:** this method is not as straight forward as the create/checkout/track/fetch all at once method above\r\n\r\n[get all the new remote files](https://stackoverflow.com/questions/37433814/git-fetch-not-working-for-fetch-new-files)   \r\n\r\n**GOTCHA: fatal: refusing to merge unrelated histories**   \r\n\r\n[Git refusing to merge unrelated histories on rebase](https://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories-on-rebase)   \r\n\r\ni ran this from the gh-pages branch   \r\n\r\n```\r\n  // not needed:\r\n\r\n   git pull origin gh-pages --allow-unrelated-histories\r\n```\r\n\r\n> i won\'t need this step if i manually create and track the remote branch in the step above\r\n\r\n#### github pages test 2\r\n\r\nanother intro with a template   \r\n\r\n- make a new repo   \r\n- turn on pages   \r\n  - ~~how does the theme template interact with the .html or readme file?~~   \r\n\r\n  _there is no default .html file, and all the pages are forced to have a theme template_   \r\n  _**also note:** the theme has no effect on your storybook upload_   \r\n\r\n> i can\'t find anything that tells me how to properly add a storybook build to gh-pages so i will use the gh-pages cli method and reverse engineer it to see if i can at least describe how to do it manually   \r\n\r\n<br/>\r\n\r\n<hr/>\r\n\r\n### [gh-pages cli method](https://arminydy.medium.com/how-to-deploy-storybook-to-github-pages-4894097d49ab)   \r\n\r\n#### install gh-pages   \r\n\r\n```\r\n  npm install gh-pages --save-dev\r\n\r\n  or\r\n\r\n  npm i gh-pages -D\r\n```\r\n\r\n#### open the package.json file and add the following code at the beginning of the file    \r\n\r\n```\r\n  "homepage": "http://YOUR_GITHUB_USERNAME.github.io/REPO_NAME"\r\n```\r\n\r\nidk what would happen if you didn\'t add this homepage property to package.json   \r\n\r\nnext add the following code to you package.json scripts tag   \r\n\r\n```\r\n  "scripts": {\r\n    "predeploy": "npm run build-storybook",\r\n    "deploy-storybook": "gh-pages -d storybook-static",\r\n    "build-storybook": "build-storybook"\r\n  },\r\n```\r\n\r\n_build-storybook should actually already be there_\r\n\r\nin the interest of safety i ran the deploy-storybook and predeploy scripts indepedently of each other, ideally they should be a single script that waits for the first command to finish before running the 2nd command\r\n\r\n> afterward it took github a little time before it registered the changes but sure enough, gh-pages now shows my storybook\r\n\r\n#### storybook build test   \r\n\r\n- what directory does sb build to by default running:\r\n\r\n```\r\n  npm run build-storybook\r\n```\r\n\r\nwithout any flags\r\n\r\n_storybook publishes to **"storybook-static"** by default_   \r\n\r\n#### build to an alternative location   \r\n\r\nuse the -o flag followed by the new binder path\r\n\r\n```\r\n    "scripts": {\r\n      "predeploy": "npm run build-storybook",\r\n      "deploy-storybook": "gh-pages -d storybook-static",\r\n      "build-storybook": "build-storybook -o dist"\r\n    },\r\n```\r\n\r\n_i just used **-o dist** (not ./dist or /dist)_\r\n\r\n#### Some other questions?   \r\n\r\n- how can i make the 2 scripts one by running npm run deploy?   \r\n  _use the npm **pre[scriptName]** script hook_   \r\n  [Using npm pre- and post- hooks](https://medium.com/yld-blog/using-npm-pre-and-post-hooks-d89dcf2d86cf)   \r\n\r\n- if i publish from some other location (not the local repo connected to the remote) how will gh-pages know the remotes location?   \r\n\r\n  _**GOTCHA**: Failed to get remote.origin.url (task must either be run in a git repository with a configured origin remote or must be configured with the "repo" option)._   \r\n\r\n  > add the **--repo** flag with the repository\'s url\r\n\r\n#### using the pre hook and --repo flag from an alternate location:   \r\n\r\n_package.json_\r\n\r\n```\r\n  "predeploy": "npm run build-storybook",\r\n  "deploy": "gh-pages -d storybook-static --repo https://github.com/YOUR_GITHUB_USERNAME/REPO_NAME",\r\n```\r\n\r\n#### [publish in docs mode](https://storybook.js.org/docs/react/writing-docs/build-documentation#publish-storybooks-documentation)   \r\n\r\n```\r\n  {\r\n  "scripts": {\r\n    "build-storybook-docs": "build-storybook --docs",\r\n  }\r\n}\r\n```\r\n\r\n> the $ isn\'t part of the code - its used to indicate that the following code should be run at the command line prompt\r\n\r\n#### create a cli alias   \r\n\r\n- navigate to your users root dir   \r\n\r\n```\r\n  $ cd ~\r\n```\r\n\r\n- edit your .bash_profile file   \r\n\r\n```\r\n  $ nano .bash_profile\r\n```\r\n\r\n- add your alias for your new storybook deploy script   \r\n\r\n```\r\n  $ alias deploy="npm run deploy"\r\n```\r\n\r\n- restart your .bash_Profile file   \r\n\r\n```\r\n  $ source .bash_profile\r\n\r\n  // or\r\n\r\n  $ . .bash_profile\r\n```\r\n\r\n#### after all these things everytime i want to deploy to gh-pages   \r\n\r\n- just enter the dir and type my alias "deploy"   \r\n\r\n```\r\n  $ cd path/to/your/storybook/directory\r\n  $ deploy\r\n```\r\n'))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Storybook/Docs/publish",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},1128:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(9),__webpack_require__(3),__webpack_require__(7),__webpack_require__(0);var esm=__webpack_require__(1),blocks=__webpack_require__(2);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"Storybook/Docs/Setup",parameters:{docs:{container:function container(_ref2){var children=_ref2.children,context=_ref2.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context,mdxType:"DocsContainer"},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},"# Storybook\r\n\r\n### Setup\r\n\r\n<hr/>\r\n<br/>\r\n\r\n#### install react & sass\r\ndependencies:\r\n\r\n```\r\n  npm i react react-dom sass\r\n```\r\n\r\n#### to read scss files\r\n\r\n```\r\n  npm i css-loader sass-loader style-loader\r\n```\r\n\r\n#### install and initialize storybook\r\n```\r\nnpx sb init\r\n```\r\n\r\n#### install dev dependencies\r\n```\r\n  npm i -D @storybook/addon-a11y @storybook/addon-console css-loader sass-loader style-loader\r\n```\r\n\r\n#### prep main.js   \r\n*_required for component based stories - otherwise optional_*   \r\n\r\n_main.js_   \r\n\r\n```\r\n  const path = require('path');\r\n  module.exports = {\r\n    \"stories\": [\r\n      \"../stories/**/*.stories.mdx\",\r\n      \"../stories/**/*.stories.@(js|jsx|ts|tsx)\"\r\n    ],\r\n    \"addons\": [\r\n      \"@storybook/addon-links\",\r\n      \"@storybook/addon-essentials\",\r\n      \"@storybook/addon-a11y\"\r\n    ],\r\n    webpackFinal: async (config, { configType }) => {\r\n      // `configType` has a value of 'DEVELOPMENT' or 'PRODUCTION'\r\n      // You can change the configuration based on that.\r\n      // 'PRODUCTION' is used when building the static version of storybook.\r\n\r\n      // Make whatever fine-grained changes you need\r\n      config.module.rules.push({\r\n        test: /\\.scss$/,\r\n        use: ['style-loader', 'css-loader', 'sass-loader'],\r\n        include: path.resolve(__dirname, '../'),\r\n      });\r\n\r\n      // Return the altered config\r\n      return config;\r\n    },\r\n  }\r\n\r\n```\r\n**_webpackFinal makes it possible to use sass files in your stories_**\r\n\r\n#### prep preview.js   \r\n*_required for component based stories - otherwise optional_*\r\n\r\n_preview.js_   \r\n\r\n```\r\n  import React from 'react';\r\n  import {addDecorator} from '@storybook/react';\r\n  import Center from '../stories/components/Center';\r\n  import {withConsole} from \"@storybook/addon-console\";// adds console logs to actions tab\r\n  import {withA11y} from '@storybook/addon-a11y';//  accessibility validator\r\n\r\n  // addDecorator(story => <Center>{story()}</Center>);// pre-themed\r\n  // addDecorator(story => <ThemeProvider theme={theme}><CSSReset />{story()}</ThemeProvider>);// example from the video\r\n  // addDecorator(story => <ChakraProvider>{story()}</ChakraProvider>);\r\n\r\n  export const parameters = {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    options: {\r\n      storySort: (a, b) =>\r\n        a[1].kind === b[1].kind ? 0 : a[1].id.localeCompare(b[1].id, undefined, { numeric: true }),\r\n    },\r\n  }\r\n\r\n  // sorts categories alphabetically\r\n\r\n  // v6 lets me use multiple decorators in an array of decorators - the theme is still not working\r\n  export const decorators = [\r\n    story => <Center>{story()}</Center>,\r\n    (story, context) => withConsole()(story)(context),\r\n    (story) => withA11y(story)\r\n  ]\r\n\r\n```\r\n\r\n#### [Controlling a story's view mode](https://github.com/storybookjs/storybook/blob/master/addons/docs/docs/recipes.md#controlling-a-storys-view-mode)   \r\n- previewTabs property - can put docs tab before canvas tab\r\n- viewMode property - can determine which tab is always displayed when navigating back to a story\r\n\r\n```\r\n  <Canvas>\r\n    <Story name=\"Toast\"\r\n      parameters={{\r\n        docs: {\r\n          source: {code:`//triggered by an onClick event\r\n          const {toaster} = require('../../../xfiles/js/lib/elements/toaster/toaster');\r\n          toaster({home, name, message, auto, sec});`}\r\n        },\r\n        viewMode: 'docs',\r\n        previewTabs: { 'storybook/docs/panel': { index: -1 } }\r\n      }}\r\n    >\r\n      {Template.bind({})}\r\n    </Story>\r\n  </Canvas>\r\n```\r\n> views can be controlled down to the individual stories. im sure i can move it to meta for global controls.\r\n\r\n#### create a components directory\r\n#### clone Center component [optional]\r\n#### clone css directory\r\n\r\n#### [Overwriting docs container](https://github.com/storybookjs/storybook/blob/master/addons/docs/docs/recipes.md#overwriting-docs-container)   \r\n\r\n> add this parameters prop to the meta tag\r\n\r\n```\r\n  parameters={{\r\n    docs: {\r\n      container: ({ children, context }) => (\r\n        <DocsContainer context={context}>\r\n            <div style={{padding: '0 3rem'}}>{children}</div>\r\n        </DocsContainer>\r\n      ),\r\n    }\r\n  }}\r\n```\r\n\r\n_meta tag example_\r\n\r\n```\r\n  import { Meta, Description, DocsContainer } from '@storybook/addon-docs/blocks';\r\n\r\n  ...\r\n\r\n  <Meta title=\"Storybook/Docs/Setup\"\r\n    parameters={{\r\n      docs: {\r\n        container: ({ children, context }) => (\r\n          <DocsContainer context={context}>\r\n              <div style={{padding: '0 3rem'}}>{children}</div>\r\n          </DocsContainer>\r\n        ),\r\n      },\r\n    }}\r\n   />\r\n```\r\n\r\n> I can also use a decorator to do the same thing without having to add it to every file\r\n\r\n_.storybook/preview.js_\r\n\r\n```\r\n  import Center from '../stories/components/Center';\r\n\r\n  ...\r\n\r\n  export const decorators = [story => <Center>{story()}</Center>]\r\n```\r\n\r\n#### Center component example   \r\n\r\n_stories/Center/Center.js_\r\n\r\n```\r\n//import React from 'react';// probably not needed\r\nimport './Center.css';\r\nrequire('../../css/style.scss');\r\n\r\nconst Center = (props) => {\r\n  return (\r\n    <div className=\"center storybook-center\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Center;\r\n\r\n```\r\n\r\n**GOTCHA:** center is also used to load the css/style.scss file\r\n> center may not have any other use when using the .md method other than loading globally\r\n"),Object(esm.mdx)("pre",null,Object(esm.mdx)("code",_extends({parentName:"pre"},{}),"  it displays the copy button if the code block is added directly to the .mdx file\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Storybook/Docs/Setup",parameters:{docs:{container:function container(_ref3){var children=_ref3.children,context=_ref3.context;return Object(esm.mdx)(blocks.DocsContainer,{context:context},Object(esm.mdx)("div",{className:"d3-storybook-wrapper",style:{padding:"0 3rem"}},children))}}},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},318:function(module,__webpack_exports__,__webpack_require__){"use strict";var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(482),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(483),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default.a);___CSS_LOADER_EXPORT___.push([module.i,"*{box-sizing:border-box}.hide-scroll::-webkit-scrollbar,.hide_scroll::-webkit-scrollbar{display:none}.hide-scroll,.hide_scroll{-ms-overflow-style:none}code{color:wheat !important;background-color:#34495e !important;padding:.8rem !important;width:100%;word-break:break-all;white-space:break-spaces !important;line-height:1.5 !important;font-size:.7rem !important}","",{version:3,sources:["webpack://./stories/css/style.scss"],names:[],mappings:"AACE,EAAA,qBAAA,CAGA,gEACE,YAAA,CAGF,0BACE,uBAAA,CAGF,KACE,sBAAA,CACA,mCAAA,CACA,wBAAA,CACA,UAAA,CACA,oBAAA,CACA,mCAAA,CACA,0BAAA,CACA,0BAAA",sourcesContent:["  $mp:!important;\r\n  *{box-sizing:border-box;}\r\n\r\n  /* Hide scrollbar for Chrome, Safari and Opera */\r\n  .hide-scroll::-webkit-scrollbar, .hide_scroll::-webkit-scrollbar {\r\n    display: none; }\r\n\r\n  /* Hide scrollbar for IE and Edge */\r\n  .hide-scroll, .hide_scroll {\r\n    -ms-overflow-style: none;\r\n  }\r\n\r\n  code{\r\n    color: wheat $mp;\r\n    background-color: #34495e $mp;\r\n    padding: .8rem $mp;\r\n    width:100%;\r\n    word-break: break-all;\r\n    white-space: break-spaces $mp;\r\n    line-height: 1.5 $mp;\r\n    font-size: .7rem $mp;\r\n  }\r\n"],sourceRoot:""}]),__webpack_exports__.a=___CSS_LOADER_EXPORT___},480:function(module,exports,__webpack_require__){module.exports=__webpack_require__(1095)},486:function(module,exports,__webpack_require__){__webpack_require__(487),__webpack_require__(658),__webpack_require__(659),__webpack_require__(815),__webpack_require__(1033),__webpack_require__(1065),__webpack_require__(1069),__webpack_require__(1081),__webpack_require__(1083),__webpack_require__(1088),__webpack_require__(1090),module.exports=__webpack_require__(1101)},561:function(module,exports){},659:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(360)}},[[486,1,2]]]);
//# sourceMappingURL=main.be6a805ecb691c2de74e.bundle.js.map